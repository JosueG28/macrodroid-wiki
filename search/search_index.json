{"config":{"lang":["en","es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udcf1 Welcome to the Unofficial MacroDroid Wiki","text":"<p>Created and maintained by Josue Garcia</p> <p>Welcome to your go-to source for everything MacroDroid \u2014 the powerful Android automation app. This wiki aims to provide clear, structured, and constantly updated documentation to help you master automation with ease.</p>"},{"location":"#get-started","title":"\ud83d\ude80 Get Started","text":"<p>Whether you're a beginner or a power user, this wiki has you covered. Explore key areas of MacroDroid:</p> <ul> <li> <p>Triggers   What initiates your macros.  </p> </li> <li> <p>Actions   The things MacroDroid can do in response to triggers.  </p> </li> <li> <p>Constraints   Add logic and control to when your macros activate.</p> </li> <li> <p>Variables   Store, change, and use dynamic values across your macros.</p> </li> <li> <p>Plugins &amp; Integrations   Expand MacroDroid\u2019s capabilities with external tools.</p> </li> <li> <p>Magic Text   Insert dynamic content into notifications, logs, and more.</p> </li> </ul>"},{"location":"#still-in-progress","title":"\ud83d\udee0\ufe0f Still in Progress","text":"<p>This wiki is under active development. Some pages may be incomplete or in progress \u2014 check back regularly for updates.</p> <p>Have suggestions or found something worth improving? You're welcome to share ideas or open an issue on GitHub. Contributions and feedback are appreciated, but inclusion or response isn't guaranteed.</p> <p>Disclaimer: This wiki is unofficial and not affiliated with the official MacroDroid team.</p>"},{"location":"action_blocks/","title":"Understanding Action Blocks in MacroDroid","text":"<p>Action Blocks let you create reusable chunks of actions to simplify your macros. Think of them as custom building blocks.</p>"},{"location":"action_blocks/#key-features","title":"Key Features","text":""},{"location":"action_blocks/#1-input-and-output-parameters","title":"1. Input and Output Parameters","text":"<ul> <li>Inputs: Values passed into the Action Block  </li> <li>Outputs: Results returned to the calling macro  </li> <li>Supported Types:  </li> <li>Text (String)  </li> <li>Numbers (Integer/Decimal)  </li> <li>True/False (Boolean)  </li> <li>Lists (Array)  </li> <li>Key-Value Collections (Dictionary)  </li> </ul> <p>Example: Create a \"Calculate Discount\" Action Block with <code>price</code> (input) and <code>finalPrice</code> (output).</p>"},{"location":"action_blocks/#2-working-variables","title":"2. Working Variables","text":"<ul> <li>Temporary variables acting as a scratchpad  </li> <li>Exist only while the Action Block runs  </li> <li>Ideal for intermediate calculations  </li> <li>Automatically reset every time the block runs  </li> </ul> <p>Example: Use <code>tempTotal</code> for intermediate values during calculations.</p>"},{"location":"action_blocks/#anatomy-of-an-action-block","title":"Anatomy of an Action Block","text":"<pre><code>[Action Block Name]\n\u2502\n\u251c\u2500\u2500 INPUTS (optional)\n\u2502   \u2514\u2500\u2500 e.g., userName (Text), itemPrice (Number)\n\u2502\n\u251c\u2500\u2500 WORKING VARIABLES (optional)\n\u2502   \u2514\u2500\u2500 Temporary values (cleared after each run)\n\u2502\n\u251c\u2500\u2500 ACTIONS\n\u2502   \u251c\u2500\u2500 Standard MacroDroid actions\n\u2502   \u251c\u2500\u2500 Use inputs and working variables\n\u2502   \u2514\u2500\u2500 Set outputs and working variables\n\u2502\n\u251c\u2500\u2500 CLAUSES/RESTRICTIONS (optional)\n\u2502\n\u2514\u2500\u2500 OUTPUTS (optional)\n    \u2514\u2500\u2500 e.g., discountedPrice (Number), greetingMessage (Text)\n</code></pre>"},{"location":"action_blocks/#key-benefits","title":"Key Benefits","text":"<ul> <li>Reusability: Use the same block in multiple macros  </li> <li>Simplify Macros: Replace many actions with a single block  </li> <li>Easy Updates: Change logic in one place  </li> <li>Cleaner Macros: Hide complexity under the hood  </li> </ul>"},{"location":"action_blocks/#important-limitations","title":"Important Limitations","text":"<ul> <li>No triggers (only actions, clauses, and restrictions)  </li> <li>Working variables disappear after the block finishes  </li> <li>Cannot run independently; must be called from a macro or another block  </li> </ul>"},{"location":"action_blocks/#real-world-example-send-custom-notification-action-block","title":"Real-World Example: \"Send Custom Notification\" Action Block","text":"<pre><code>INPUTS:\n  - title (Text)\n  - message (Text)\n\nWORKING VARIABLES:\n  - tempTimestamp (Text)\n\nACTIONS:\n1. Set [tempTimestamp] = Current time\n2. Create notification:\n   Title = {title}\n   Text = {message} at {tempTimestamp}\n\nOUTPUTS:\n  - None\n</code></pre>"},{"location":"action_blocks/#pro-tips","title":"Pro Tips","text":"<ul> <li>Start simple, add complexity later  </li> <li>Name variables clearly (<code>totalPrice</code> vs <code>tempCalc</code>)  </li> <li>Use \"Comment\" actions to document your logic  </li> <li>Test blocks individually before integrating into macros  </li> </ul> <p>Action Blocks are mini-macros inside your main macros. Build once, reuse everywhere.</p>"},{"location":"action_blocks/#video-guides","title":"Video Guides","text":""},{"location":"actions/","title":"Introduction to Actions in MacroDroid","text":"<p>Actions are what your device does when a macro is triggered. They are the \u201cTHEN\u201d part of the automation: \u201cWhen something happens \u2192 do this.\u201d</p> <p>From showing a notification to turning off Wi-Fi or running a script, actions are how your macros actually perform tasks.</p> <p>\u2192 Go to action list</p>"},{"location":"actions/#what-is-an-action","title":"What Is an Action?","text":"<p>An action is a task that MacroDroid tells your device to perform. Every macro must include at least one action, or nothing will happen when it's triggered.</p> <p>Example: Trigger: <code>Charger Connected</code> \u2192 Action: <code>Turn On Wi-Fi</code></p> <p>This setup makes your phone automatically enable Wi-Fi when you plug it in.</p>"},{"location":"actions/#do-actions-run-in-order","title":"Do Actions Run in Order?","text":"<p>Yes\u2014but with a catch.</p> <ul> <li>Most actions run in order, one after another.</li> <li>Some actions (like HTTP requests or scripts) may take longer and can run in the background, which means the next action might start before they finish.</li> </ul> <p>To control this: You can enable \"Block Next Action Until Complete\" to make sure things run in sequence when needed.</p>"},{"location":"actions/#examples-of-useful-actions","title":"Examples of Useful Actions","text":"<p>MacroDroid includes many action types. Here are some popular ones:</p> <ul> <li>Notifications: <code>Show Notification</code>, <code>Play Sound</code>, <code>Vibrate</code></li> <li>Device Controls: <code>Set Volume</code>, <code>Adjust Brightness</code>, <code>Toggle Wi-Fi/Bluetooth</code></li> <li>App Controls: <code>Launch App</code>, <code>Close App</code>, <code>Simulate Tap</code></li> <li>Connectivity: <code>Send SMS</code>, <code>Make HTTP Request</code>, <code>Connect to Network</code></li> <li>Advanced: <code>Run Shell Command</code>, <code>Modify Variable</code>, <code>Take Screenshot</code></li> </ul>"},{"location":"actions/#why-are-actions-important","title":"Why Are Actions Important?","text":"<ul> <li>They define what your macro does.  </li> <li>You can chain multiple actions to perform more complex tasks.  </li> <li>Some actions give you control over how and when they run (sync/async behavior).</li> </ul> <p>Example: Trigger: <code>Headphones Connected</code> Actions: 1. Open Spotify 2. Set Volume to 50% 3. Show Notification: <code>Enjoy your music!</code></p>"},{"location":"actions/#tips-for-beginners","title":"Tips for Beginners","text":"<ul> <li>Start with simple actions like <code>Show Notification</code> or <code>Turn On Wi-Fi</code>.  </li> <li>Test your macro after each change to make sure it works as expected.  </li> <li>Don\u2019t worry about complex stuff like scripting or async behavior right away\u2014grow into it.</li> </ul> <p>Actions are how you tell MacroDroid what to do. Get comfortable with them, combine them smartly, and you\u2019ll soon build automations that feel like magic.</p>"},{"location":"actions/list/","title":"List of actions","text":""},{"location":"actions/list/#accessibility-service","title":"Accessibility Service","text":""},{"location":"actions/list/#action-block","title":"Action Block","text":""},{"location":"actions/list/#calendar-add-event","title":"Calendar - Add Event","text":""},{"location":"actions/list/#notification-led-enabledisable","title":"Notification LED Enable/Disable","text":""},{"location":"actions/list/#android-wear","title":"Android Wear","text":""},{"location":"actions/list/#answer-call","title":"Answer Call","text":""},{"location":"actions/list/#block-screen-touches","title":"Block Screen Touches","text":""},{"location":"actions/list/#bluetooth-tethering","title":"Bluetooth Tethering","text":""},{"location":"actions/list/#break-from-loop","title":"Break From Loop","text":""},{"location":"actions/list/#torch-onoff","title":"Torch On/Off","text":""},{"location":"actions/list/#cancel-macro-actions","title":"Cancel Macro Actions","text":""},{"location":"actions/list/#car-mode","title":"Car Mode","text":""},{"location":"actions/list/#keyboard-set-default","title":"Keyboard - Set Default","text":""},{"location":"actions/list/#check-text-on-screen","title":"Check Text On Screen","text":""},{"location":"actions/list/#clear-app-data","title":"Clear App Data","text":""},{"location":"actions/list/#clear-call-log","title":"Clear Call Log","text":""},{"location":"actions/list/#clear-log","title":"Clear Log","text":""},{"location":"actions/list/#clear-notifications","title":"Clear Notifications","text":""},{"location":"actions/list/#clear-dictionaryarray-entry","title":"Clear Dictionary/Array Entry","text":""},{"location":"actions/list/#clear-variables","title":"Clear Variables","text":""},{"location":"actions/list/#fill-clipboard","title":"Fill Clipboard","text":""},{"location":"actions/list/#kill-application","title":"Kill Application","text":""},{"location":"actions/list/#configure-app-notifications","title":"Configure App Notifications","text":""},{"location":"actions/list/#notification-led","title":"Notification LED","text":""},{"location":"actions/list/#authenticate-user","title":"Authenticate User","text":""},{"location":"actions/list/#confirm-next","title":"Confirm Next","text":""},{"location":"actions/list/#connectivity-check","title":"Connectivity Check","text":""},{"location":"actions/list/#contact-via-app","title":"Contact via App","text":""},{"location":"actions/list/#continue-loop","title":"Continue Loop","text":""},{"location":"actions/list/#control-media","title":"Control Media","text":""},{"location":"actions/list/#dark-theme","title":"Dark Theme","text":""},{"location":"actions/list/#daydreamscreensaver-on","title":"Daydream/Screensaver on","text":""},{"location":"actions/list/#delete-macro","title":"Delete Macro","text":""},{"location":"actions/list/#demo-mode","title":"Demo Mode","text":""},{"location":"actions/list/#dim-screen","title":"Dim Screen","text":""},{"location":"actions/list/#app-enabledisable","title":"App Enable/Disable","text":""},{"location":"actions/list/#enabledisable-macro","title":"Enable/Disable Macro","text":""},{"location":"actions/list/#disable-macrodroid","title":"Disable MacroDroid","text":""},{"location":"actions/list/#enabledisable-categories","title":"Enable/Disable Categories","text":""},{"location":"actions/list/#empty-action","title":"Empty Action","text":""},{"location":"actions/list/#camera-enabledisable","title":"Camera Enable/Disable","text":""},{"location":"actions/list/#exit-action-block","title":"Exit Action Block","text":""},{"location":"actions/list/#export-macros","title":"Export macros","text":""},{"location":"actions/list/#export-log","title":"Export Log","text":""},{"location":"actions/list/#expandcollapse-status-bar","title":"Expand/Collapse Status Bar","text":""},{"location":"actions/list/#font-scale","title":"Font Scale","text":""},{"location":"actions/list/#if-clause","title":"If clause","text":""},{"location":"actions/list/#immersive-mode","title":"Immersive Mode","text":""},{"location":"actions/list/#file-operation-legacy","title":"File Operation (legacy)","text":""},{"location":"actions/list/#translate-text","title":"Translate Text","text":""},{"location":"actions/list/#javascript-code","title":"JavaScript Code","text":""},{"location":"actions/list/#get-light-level","title":"Get Light Level","text":""},{"location":"actions/list/#share-text","title":"Share Text","text":""},{"location":"actions/list/#display-bubble-notification","title":"Display Bubble Notification","text":""},{"location":"actions/list/#clear-macrodroid-dialog","title":"Clear MacroDroid Dialog","text":""},{"location":"actions/list/#enabledisable-trigger","title":"Enable/Disable Trigger","text":""},{"location":"actions/list/#show-volume-popup","title":"Show Volume Popup","text":""},{"location":"actions/list/#delete-variable","title":"Delete Variable","text":""},{"location":"actions/list/#animation-overlay","title":"Animation Overlay","text":""},{"location":"actions/list/#array-manipulation","title":"Array Manipulation","text":""},{"location":"actions/list/#check-text-in-screenshot","title":"Check Text In Screenshot","text":""},{"location":"actions/list/#check-pixel-colour","title":"Check pixel colour","text":""},{"location":"actions/list/#display-density","title":"Display Density","text":""},{"location":"actions/list/#text-from-image-ocr","title":"Text from Image (OCR)","text":""},{"location":"actions/list/#get-contacts","title":"Get Contacts","text":""},{"location":"actions/list/#get-installed-apps","title":"Get Installed Apps","text":""},{"location":"actions/list/#edge-notification-light","title":"Edge Notification Light","text":""},{"location":"actions/list/#launch-app-activity","title":"Launch App Activity","text":""},{"location":"actions/list/#action-group","title":"Action Group","text":""},{"location":"actions/list/#summarise-macrosaction-blocks","title":"Summarise Macros/Action Blocks","text":""},{"location":"actions/list/#wifi-ssid-scan","title":"Wifi SSID Scan","text":""},{"location":"actions/list/#overlay-bar","title":"Overlay Bar","text":""},{"location":"actions/list/#display-custom-scene","title":"Display Custom Scene","text":""},{"location":"actions/list/#hide-custom-scene","title":"Hide Custom Scene","text":""},{"location":"actions/list/#input-key-event","title":"Input Key Event","text":""},{"location":"actions/list/#java-code","title":"Java Code","text":""},{"location":"actions/list/#wear-os-complication","title":"Wear OS Complication","text":""},{"location":"actions/list/#http-server-response","title":"HTTP Server Response","text":""},{"location":"actions/control_flow/","title":"\ud83d\udee0\ufe0f Control Flow in MacroDroid","text":"<p>Control Flow actions let you direct how your MacroDroid macros run, creating smart, dynamic automations. Explore these tools to build precise workflows:</p>"},{"location":"actions/control_flow/#if-clause-run-actions-based-on-specific-conditions","title":"If clause: Run actions based on specific conditions.","text":""},{"location":"actions/control_flow/#if-confirmed-then-execute-actions-after-user-confirmation","title":"If confirmed then: Execute actions after user confirmation.","text":""},{"location":"actions/control_flow/#repeat-actions-loop-actions-a-fixed-number-of-times-while-a-condition-is-true-once-then-repeat-while-a-condition-holds-or-endlessly-until-a-break","title":"Repeat actions: Loop actions a fixed number of times, while a condition is true, once then repeat while a condition holds, or endlessly until a break.","text":""},{"location":"actions/control_flow/#iterate-dicionaryarray-process-each-item-in-a-dictionary-or-array","title":"Iterate Dicionary/Array: Process each item in a dictionary or array.","text":""},{"location":"actions/control_flow/#break-from-loop-exit-a-loop-early-when-a-condition-is-met","title":"Break from loop: Exit a loop early when a condition is met.","text":""},{"location":"actions/control_flow/#continue-loop-skip-to-the-next-loop-iteration","title":"Continue loop: Skip to the next loop iteration.","text":"<p>Discover these control flow features to craft powerful, tailored macros!</p>"},{"location":"actions/control_flow/if_clause/","title":"\ud83d\udd04 Using the If Clause in MacroDroid","text":"<p>The If Clause in MacroDroid is a powerful tool that allows you to add conditional logic to your macros, enabling actions to execute only when specific conditions are met. Found under the Conditions/Loops category in the \"Add Action\" menu, the If Clause, along with its terminating End If, lets you control the flow of your macro based on dynamic conditions, making your automations smarter and more precise.</p>"},{"location":"actions/control_flow/if_clause/#what-is-the-if-clause","title":"\ud83d\udd39 What is the If Clause?","text":"<p>The If Clause is an action that checks whether a specified condition is true before executing a set of subsequent actions. If the condition is met, the actions between the If and End If statements are executed. If the condition is false, those actions are skipped. Conditions in an If Clause work the same way as constraints in MacroDroid and support logical operators like AND (default) or OR for multiple conditions.</p>"},{"location":"actions/control_flow/if_clause/#key-components","title":"Key Components:","text":"<ul> <li>If Clause: Defines the condition to check.</li> <li>End If: Marks the end of the conditional block.</li> <li>Else Clause (optional): Specifies alternative actions to execute if the condition is false.</li> <li>Else/If or Else/If Confirmed Clause (optional): Allows additional conditions to be checked if the initial condition fails.</li> <li>Nested Ifs: You can place additional If/End If pairs within an existing If Clause for more complex logic.</li> </ul>"},{"location":"actions/control_flow/if_clause/#example","title":"Example:","text":"<p>A macro might use an If Clause to check if the battery level is below 20%. If true, it could trigger a \"Show Notification\" action; if false, it could skip to an Else Clause to perform a different action, like \"Increase Brightness.\"</p>"},{"location":"actions/control_flow/if_clause/#how-to-add-an-if-clause","title":"\ud83d\udd39 How to Add an If Clause","text":"<ol> <li>In the macro editing screen, select Add Action &gt; Conditions/Loops &gt; If Clause.</li> <li>Choose a condition (e.g., \"Battery Level &lt; 20%\"). These conditions are identical to those available in constraints.</li> <li>Add actions between the If and End If to execute if the condition is true.</li> <li>(Optional) To add an Else Clause, select the If Clause again, choose Add Else Clause from the action menu, and add actions to execute if the condition is false.</li> <li>(Optional) For additional conditions, select Add Else/If Clause or Add Else/If Confirmed Clause to check further conditions if the initial one fails.</li> </ol>"},{"location":"actions/control_flow/if_clause/#logical-operators-in-if-clauses","title":"\ud83d\udd39 Logical Operators in If Clauses","text":"<p>When using multiple conditions in an If Clause, you can combine them with: - AND (default): All conditions must be true for the actions to execute. - OR: At least one condition must be true for the actions to execute.</p>"},{"location":"actions/control_flow/if_clause/#example_1","title":"Example:","text":"<p>An If Clause with conditions \"Battery Level &lt; 30%\" AND \"Not Charging\" will only execute its actions if both are true.</p>"},{"location":"actions/control_flow/if_clause/#else-and-elseif-clauses","title":"\ud83d\udd39 Else and Else/If Clauses","text":"<ul> <li>Else Clause: Use this to define actions that run when the If condition is false. To add, select the If Clause, then choose Add Else Clause from the action menu.</li> <li>Else/If Clause: Allows you to check an additional condition if the initial If condition fails. Select Add Else/If Clause to add another condition.</li> <li>Else/If Confirmed Clause: Similar to Else/If but requires user confirmation (e.g., via a dialog) before proceeding.</li> </ul>"},{"location":"actions/control_flow/if_clause/#example_2","title":"Example:","text":"<ul> <li>If: \"Wi-Fi Connected\" \u2192 Action: \"Show Notification: Connected to Wi-Fi.\"</li> <li>Else: Action: \"Show Notification: No Wi-Fi Connection.\"</li> <li>Else/If: \"Mobile Data Enabled\" \u2192 Action: \"Show Notification: Using Mobile Data.\"</li> </ul>"},{"location":"actions/control_flow/if_clause/#nested-if-clauses","title":"\ud83d\udd39 Nested If Clauses","text":"<p>You can place additional If/End If pairs within an existing If Clause to create complex, layered logic. This is called nesting and is useful for scenarios requiring multiple levels of decision-making.</p>"},{"location":"actions/control_flow/if_clause/#example_3","title":"Example:","text":"<ul> <li>If: \"Time of Day: 8:00 AM - 10:00 PM\"</li> <li>Nested If: \"Battery Level &gt; 50%\" \u2192 Action: \"Increase Volume.\"</li> <li>Nested Else: Action: \"Show Notification: Low Battery.\"</li> <li>End If</li> </ul>"},{"location":"actions/control_flow/if_clause/#constraints-in-if-clauses","title":"\ud83d\udd39 Constraints in If Clauses","text":"<p>The conditions in an If Clause are the same as those used in constraints and include options like checking device states, time, connectivity, or variable values. One powerful option is MacroDroid Variable/Compare Values, which allows you to compare variables using specific operators.</p>"},{"location":"actions/control_flow/if_clause/#comparison-operators-for-variables","title":"Comparison Operators for Variables:","text":"<ul> <li>= (Equal): The variable\u2019s content must exactly match the specified value.</li> <li>Compatible: String, Integer, Decimal, Boolean (Boolean only in compare values condition/constraints).</li> <li>Example: <code>{my_variable} = \"hello\"</code> \u2192 True if the variable contains exactly \"hello.\"</li> <li>!= (Not Equal): The variable\u2019s content must be different from the specified value.</li> <li>Compatible: String, Integer, Decimal, Boolean.</li> <li>Example: <code>{my_variable} != \"hello\"</code> \u2192 True if the variable does not contain \"hello.\"</li> <li>Contains: The variable\u2019s content must include the specified text.</li> <li>Compatible: String.</li> <li>Example: <code>{my_variable} Contains \"info\"</code> \u2192 True if the variable includes \"info\" (e.g., \"Here are the informations...\").</li> <li>Excludes: The variable\u2019s content must not include the specified text.</li> <li>Compatible: String.</li> <li>Example: <code>{my_variable} Excludes \"error\"</code> \u2192 True if the variable does not contain \"error.\"</li> </ul>"},{"location":"actions/control_flow/if_clause/#wildcards","title":"Wildcards:","text":"<ul> <li><code>*</code>: Represents any number of characters (0 or more, equivalent to <code>.*</code> in Regex).</li> <li>Example: <code>{my_variable} = \"data*\"</code> \u2192 Matches \"data,\" \"database,\" or \"data123.\"</li> <li><code>?</code>: Represents exactly one mandatory character (equivalent to <code>.{1}</code> in Regex).</li> <li>Example: <code>{my_variable} = \"dat?\"</code> \u2192 Matches \"data\" or \"date\" but not \"database.\"</li> <li>Regular Expressions: Check the Enter regular expression matching box to use Regex syntax for advanced pattern matching (recommended for advanced users).</li> </ul>"},{"location":"actions/control_flow/if_clause/#why-use-if-clauses","title":"\ud83d\udd39 Why Use If Clauses?","text":"<ul> <li>Conditional Logic: Execute actions only when specific conditions are met, making macros smarter.</li> <li>Flexibility: Combine conditions with AND/OR, use Else clauses, or nest Ifs for complex workflows.</li> <li>Precision: Compare variables or use wildcards/Regex for fine-tuned control over macro behavior.</li> </ul>"},{"location":"actions/control_flow/if_clause/#practical-example","title":"Practical Example:","text":"<p>A macro to manage notifications based on battery and time: - Trigger: \"Battery Level Drops Below 20%.\" - If Clause: \"Time of Day: 8:00 AM - 10:00 PM\"   - Action: \"Show Notification: Low Battery, Charge Soon!\"   - Nested If: <code>{battery_level} &lt; 10</code>     - Action: \"Lower Brightness.\"   - Nested Else: Action: \"Vibrate.\" - Else Clause: Action: \"Show Notification: Low Battery (Night Mode).\" - End If</p>"},{"location":"actions/control_flow/if_clause/#tips-for-new-users","title":"\ud83d\udd39 Tips for New Users","text":"<ul> <li>Start Simple: Begin with a basic If Clause, like checking \"Battery Level &lt; 30%,\" to understand how conditions work.</li> <li>Test Conditions: Run your macro to ensure the If Clause evaluates as expected.</li> <li>Use Familiar Constraints: Choose conditions you\u2019ve used in constraints to ease into If Clauses.</li> </ul>"},{"location":"actions/control_flow/if_clause/#tips-for-advanced-users","title":"\ud83d\udd39 Tips for Advanced Users","text":"<ul> <li>Nest If Clauses: Use nested Ifs for multi-layered logic, such as checking multiple device states or variable values.</li> <li>Leverage Variables: Combine If Clauses with variable comparisons (e.g., Contains, Excludes) for dynamic decision-making.</li> <li>Use Regex: For complex string matching, enable regular expression matching to unlock advanced possibilities.</li> </ul> <p>The If Clause is a cornerstone of advanced MacroDroid automations, giving you the power to create dynamic, context-aware macros. Experiment with conditions, Else clauses, and wildcards to build smarter workflows, whether you\u2019re just starting or crafting intricate automations!</p>"},{"location":"constraints/","title":"Constraints in MacroDroid","text":"<p>Constraints are real-time conditions that must be true when a trigger fires for a macro to run. While triggers define when something could happen, constraints decide if it should \u2014 based on things like time, charging status, or location.</p> <p>\u2192 Full Constraints List</p>"},{"location":"constraints/#what-is-a-constraint","title":"What Is a Constraint?","text":"<p>A constraint is a check that runs only at the moment a trigger activates. If all constraints pass, the macro continues. If any fail, it\u2019s canceled.</p> <p>Key facts: - Checked only at trigger time - Uses AND logic \u2014 all must be true - Doesn\u2019t monitor continuously</p> <p>Example: Trigger: Headphones Connected Constraint: Media Volume &lt; 30% \u2192 Runs only if both are true at the same time.</p>"},{"location":"constraints/#using-multiple-constraints","title":"Using Multiple Constraints","text":"<p>You can add as many constraints as needed \u2014 but remember:</p> <ul> <li>All must be true</li> <li>They\u2019re evaluated simultaneously</li> <li>You can combine types (e.g. time + battery + location)</li> </ul> <p>Example: Trigger: Screen On Constraints: - Time: 10:00 PM\u20137:00 AM - Charging: No - Wi-Fi: Connected \u2192 Runs only during the night, on battery, and with Wi-Fi.</p>"},{"location":"constraints/#where-constraints-apply","title":"Where Constraints Apply","text":"<p>Constraints can be attached at different levels:</p>"},{"location":"constraints/#local-to-triggers","title":"Local to Triggers","text":"<p>Affect only a specific trigger.</p> <p>Example: Trigger: Screen On Constraint: Charging = No \u2192 Trigger fires only if not charging.</p>"},{"location":"constraints/#local-to-actions","title":"Local to Actions","text":"<p>Affect only a specific action.</p> <p>Example: Action: Set Brightness to 100% Constraint: Time = Daytime \u2192 Runs only during the day.</p>"},{"location":"constraints/#global-constraints","title":"Global Constraints","text":"<p>Affect the entire macro \u2014 added in the Constraints section.</p> <p>Example: Global: Wi-Fi SSID = Home \u2192 Macro won\u2019t run unless you\u2019re on your home network.</p>"},{"location":"constraints/#summary-of-constraint-scopes","title":"Summary of Constraint Scopes","text":"Type Affects Scope Example Trigger Local A trigger That trigger only Only run if volume &gt; 50% when headphones connect Action Local An action That action only Only send SMS if battery &gt; 20% Global Entire macro All parts Block macro during work hours"},{"location":"constraints/#real-life-examples","title":"Real-Life Examples","text":""},{"location":"constraints/#morning-alarm","title":"Morning Alarm","text":"<ul> <li>Trigger: Alarm at 7:00 AM  </li> <li>Global Constraint: Day = Weekdays  </li> <li>Actions:</li> <li>Increase volume  </li> <li>Read weather forecast  </li> <li>Turn on smart plug  <ul> <li>Action Constraint: Plug is connected</li> </ul> </li> </ul>"},{"location":"constraints/#location-reminder","title":"Location Reminder","text":"<ul> <li>Trigger: Enter grocery store (geofence)  </li> <li>Global Constraint: Time = 8:00 AM \u2013 8:00 PM  </li> <li>Action: Show \u201cBuy Milk\u201d notification  </li> <li>Action Constraint: Notification not already shown</li> </ul>"},{"location":"constraints/#constraint-categories","title":"Constraint Categories","text":"Category Example Conditions Device State Screen on/off, Charging, Headphones plugged Connectivity Wi-Fi SSID, Bluetooth device active Time/Location Time range, Day of week, Geofence entered System Battery level, App in foreground, Notification shown Custom Logic Variable value, Macro not running"},{"location":"constraints/#why-constraints-matter","title":"Why Constraints Matter","text":"<ul> <li>Precision \u2013 Run macros only in the right conditions  </li> <li>Efficiency \u2013 Save battery and system resources  </li> <li>Simplicity \u2013 Avoid duplicating macros  </li> <li>Control \u2013 Combine with variables for smart logic</li> </ul>"},{"location":"constraints/#triggers-vs-constraints","title":"Triggers vs Constraints","text":"Triggers Constraints Detect events (e.g., SMS received) Check current states (e.g., charging) Start the macro Decide if it should run Support OR logic Use AND logic only React to changes Evaluate conditions once, on fire"},{"location":"constraints/geofence/","title":"\ud83d\udccd Constraint: Geofence (location)","text":"<p>Geofence constraint checks whether your device is currently inside or outside a defined geofenced area when a trigger fires.</p> <p>Geofence Trigger | Magic Text</p>"},{"location":"constraints/geofence/#constraint-options","title":"\ud83d\udd39 Constraint Options","text":""},{"location":"constraints/geofence/#area-status","title":"Area Status","text":"<ul> <li>Inside Area: Constraint passes when device is within the geofence</li> <li>Outside Area: Constraint passes when device is outside the geofence</li> </ul>"},{"location":"constraints/geofence/#location-availability","title":"Location Availability","text":"<ul> <li>Set constraint to true if no location available:   When enabled, the constraint will automatically pass if location services are unavailable or can't determine position. Useful for: Ensuring macros still run when location data is temporarily unavailable.</li> </ul>"},{"location":"constraints/geofence/#update-frequency-settings","title":"\ud83d\udd39 Update Frequency Settings","text":"<p>High frequency update rates may cause additional battery drain. Choose from: - Low Power: Minimal updates (best battery life) - Balanced: Default setting (recommended) - High Accuracy: Frequent updates (higher battery usage)</p> <p>How it works: - When you enter your \"Work Office\" geofence:   \u2192 Constraint checks if you're still inside the area (verifying against GPS/WiFi data) - If inside \u2192 Actions execute (e.g., silence phone) - If outside \u2192 Constraint fails \u2192 Actions don't run - If location unavailable \u2192 Fallback option determines behavior:   - Enabled: Constraint passes \u2192 Actions run   - Disabled: Constraint fails \u2192 Actions don't run  </p> <p>Requires: - An existing geofence created via the Geofences tile - Location services enabled on device - Needs Google Play Services to work</p>"},{"location":"constraints/list/","title":"List of constraints","text":""},{"location":"constraints/list/#airplane-mode","title":"Airplane Mode","text":""},{"location":"constraints/list/#application-running","title":"Application Running","text":""},{"location":"constraints/list/#auto-rotate","title":"Auto Rotate","text":""},{"location":"constraints/list/#auto-sync","title":"Auto Sync","text":""},{"location":"constraints/list/#battery-level","title":"Battery Level","text":""},{"location":"constraints/list/#battery-saver","title":"Battery Saver","text":""},{"location":"constraints/list/#battery-temperature","title":"Battery Temperature","text":""},{"location":"constraints/list/#bluetooth-state","title":"Bluetooth State","text":""},{"location":"constraints/list/#calendar-event","title":"Calendar Event","text":""},{"location":"constraints/list/#call-state","title":"Call State","text":""},{"location":"constraints/list/#cell-tower-group","title":"Cell Tower Group","text":""},{"location":"constraints/list/#clipboard-contents","title":"Clipboard Contents","text":""},{"location":"constraints/list/#dark-theme","title":"Dark Theme","text":""},{"location":"constraints/list/#day-of-week","title":"Day of Week","text":""},{"location":"constraints/list/#device-face-updown","title":"Device Face Up/Down","text":""},{"location":"constraints/list/#device-lockedunlocked","title":"Device Locked/Unlocked","text":""},{"location":"constraints/list/#device-orientation","title":"Device Orientation","text":""},{"location":"constraints/list/#do-not-disturb","title":"Do Not Disturb","text":""},{"location":"constraints/list/#geofence-location","title":"Geofence (location)","text":""},{"location":"constraints/list/#headphones-connected","title":"Headphones Connected","text":""},{"location":"constraints/list/#hotspot-state","title":"Hotspot State","text":""},{"location":"constraints/list/#invert-constraint","title":"Invert Constraint","text":""},{"location":"constraints/list/#ip-address","title":"IP Address","text":""},{"location":"constraints/list/#light-level","title":"Light Level","text":""},{"location":"constraints/list/#logic-andorxornot","title":"Logic (AND/OR/XOR/NOT)","text":""},{"location":"constraints/list/#macro-enabled","title":"Macro Enabled","text":""},{"location":"constraints/list/#macro-running","title":"Macro Running","text":""},{"location":"constraints/list/#mobile-data","title":"Mobile Data","text":""},{"location":"constraints/list/#mobile-network","title":"Mobile Network","text":""},{"location":"constraints/list/#music-playing","title":"Music Playing","text":""},{"location":"constraints/list/#nfc-enabled","title":"NFC Enabled","text":""},{"location":"constraints/list/#notification-present","title":"Notification Present","text":""},{"location":"constraints/list/#power-connected","title":"Power Connected","text":""},{"location":"constraints/list/#priority-mode","title":"Priority Mode","text":""},{"location":"constraints/list/#proximity-sensor","title":"Proximity Sensor","text":""},{"location":"constraints/list/#roaming-status","title":"Roaming Status","text":""},{"location":"constraints/list/#screen-onoff","title":"Screen On/Off","text":""},{"location":"constraints/list/#silent-mode","title":"Silent Mode","text":""},{"location":"constraints/list/#time-of-day","title":"Time of Day","text":""},{"location":"constraints/list/#trigger-fired","title":"Trigger Fired","text":""},{"location":"constraints/list/#variable","title":"Variable","text":""},{"location":"constraints/list/#volume-level","title":"Volume Level","text":""},{"location":"constraints/list/#vpn-connected","title":"VPN Connected","text":""},{"location":"constraints/list/#weather","title":"Weather","text":""},{"location":"constraints/list/#wifi-connection","title":"Wifi Connection","text":""},{"location":"constraints/list/#wifi-signal","title":"Wifi Signal","text":""},{"location":"constraints/list/#ambient-display-state","title":"Ambient Display State","text":""},{"location":"constraints/list/#floating-button","title":"Floating Button","text":""},{"location":"constraints/list/#quick-tile-state","title":"Quick Tile State","text":""},{"location":"constraints/list/#usb-device-connection","title":"USB Device Connection","text":""},{"location":"constraints/list/#fold-state","title":"Fold State","text":""},{"location":"constraints/list/#speaking-text","title":"Speaking Text","text":""},{"location":"constraints/list/#custom-scene","title":"Custom Scene","text":""},{"location":"constraints/list/#accessibility-service-state","title":"Accessibility Service State","text":""},{"location":"constraints/list/#shizuku-state","title":"Shizuku State","text":""},{"location":"geofences/","title":"Introduction to Geofences in MacroDroid","text":"<p>Geofences are virtual boundaries around real-world locations such as your home, work, or a frequent destination. They allow MacroDroid to automatically trigger actions when your device enters or exits those defined areas.</p> <p>Geofence Trigger Geofence Constraint Geofence Magic Text</p>"},{"location":"geofences/#what-are-geofences","title":"What Are Geofences?","text":"<p>A geofence is an invisible circle around a specific point on the map. When your phone crosses the boundary:</p> <ul> <li>A trigger can fire to launch a macro  </li> <li>A constraint can check if you're inside/outside a geofence  </li> <li>Magic Text can fetch data about your current or last geofence</li> </ul> <p>Geofences work silently in the background and are battery efficient thanks to integration with location services.</p>"},{"location":"geofences/#how-to-create-a-geofence","title":"How to Create a Geofence","text":"<ol> <li>Open the MacroDroid home screen and tap the Geofences tile  </li> <li>Tap the + button to create a new geofence  </li> <li>Choose a location by typing an address or dropping a pin on the map  </li> <li>Adjust the radius (100 to 500 meters is recommended)  </li> <li>Give it a name (e.g., <code>Home</code>, <code>Office</code>, or <code>Gym</code>)  </li> <li>Tap Save to finish</li> </ol> <p>You can always go back to edit or delete any geofence.</p>"},{"location":"geofences/#things-to-keep-in-mind","title":"Things to Keep in Mind","text":"<ul> <li>Geofences rely on Google Play Services </li> <li>Detection is not instant \u2014 it typically takes 1\u20135 minutes  </li> <li>If geofences don\u2019t work reliably, try using the Location Trigger as an alternative</li> </ul>"},{"location":"helper/","title":"Understanding MacroDroid Helper Apps for Android Automation","text":""},{"location":"helper/#why-helper-apps-are-necessary","title":"Why Helper Apps Are Necessary \ud83d\udd27","text":"<p>Android has progressively restricted apps from controlling core system functions like WiFi/Bluetooth toggling. For MacroDroid to automate these features, it uses helper apps built with older Android tools that still have necessary permissions. Think of them as \"specialized tools\" that bypass Android's restrictions when MacroDroid needs to control system features.</p>"},{"location":"helper/#helper-app-comparison-table","title":"Helper App Comparison Table \ud83d\udcca","text":"<p>Here's which helper app you should choose:</p> Feature Connectivity Helper Universal Helper Android Version Support Android 14+ Android \u226413 (or Android 14+ via PC) Installation Difficulty \u2605\u2606\u2606\u2606\u2606 (Easy - direct install) \u2605\u2605\u2605\u2606\u2606 (Complex on Android 14+) Key Features \u2022 WiFi control\u2022 Bluetooth toggle\u2022 HotSpot \u2022 All Connectivity features\u2022 Camera disable\u2022 Shell scripts Required For Xiaomi Devices Android 12+ (WiFi/BT features) Android \u226411 only Google Warning Reason Uses system-level permissions Built with older SDK (Android 5) Best For Most users on modern Android Advanced users needing extra features Download \u2b07\ufe0f Download \u2b07\ufe0f Download"},{"location":"helper/#detailed-explanation","title":"Detailed Explanation","text":""},{"location":"helper/#connectivity-helper-recommended-for-android-14","title":"Connectivity Helper (Recommended for Android 14+)","text":"<ul> <li>Why you need it: Required for basic network controls (WiFi/BT) on modern Android</li> <li>Permissions needed: Location access (only to detect WiFi networks)</li> <li>Installation Steps:</li> <li>Download APK</li> <li>Tap \"Settings\" \u2192 \"Install anyway\" when warned</li> <li>Grant permissions and disable battery optimization</li> </ul>"},{"location":"helper/#universal-helper-legacy-devices-only","title":"Universal Helper (Legacy Devices Only)","text":"<ul> <li>Why you need it: For advanced features like camera blocking or shell scripts</li> <li>Permissions needed: Extensive system-level permissions</li> <li>Installation Warning: Requires PC/ADB on Android 14+</li> </ul>"},{"location":"helper/#step-by-step-installation-guides","title":"Step-by-Step Installation Guides","text":"<p>Connectivity Helper Universal Helper</p>"},{"location":"helper/connectivity/","title":"\ud83d\udcc4 Install Connectivity Helper","text":"<p>The Connectivity Helper is a companion app for MacroDroid that works around Android 14+ restrictions, enabling these advanced features: - Enable/Disable WiFi and connect to specific networks - Enable/Disable Bluetooth - Enable/Disable HotSpot  </p> <p>Compatibility: Requires MacroDroid v5.47.8 or higher  </p>"},{"location":"helper/connectivity/#installation-steps","title":"Installation Steps","text":"<ol> <li> <p>Download APK    Use your phone's browser to download directly from the official link.</p> </li> <li> <p>Open downloaded file    Locate <code>MacroDroid_Connectivity_Helper.apk</code> in your notifications or Downloads folder.</p> </li> <li> <p>Handle \"Unknown Apps\" warning    If you see this security block: </p> </li> <li> <p>Tap Settings \u2192 Enable \"Install unknown apps\" for your browser</p> </li> <li> <p>Bypass Play Protect warnings    If Google Play Protect blocks installation:  </p> </li> <li>Initial warning: </li> <li> <p>Tap More details \u2192 Select Install anyway: </p> </li> <li> <p>Complete installation    Follow standard installation prompts after warnings are cleared.</p> </li> <li> <p>Configure permissions    When opening the app for the first time:     Grant these essential permissions:    Nearby devices    Notification access    Usage access  </p> </li> </ol> <p>Important Notes:    - Location permission is only used to control WiFi/query SSIDs \u2013 your actual location is NOT accessed  </p> <pre><code>- Battery optimization MUST be disabled for reliable functionality\n</code></pre>"},{"location":"helper/connectivity/#device-specific-configuration","title":"Device-Specific Configuration","text":"<p>Disable Battery Optimization <pre><code>- Critical for all devices! Must be disabled for reliable functionality\n</code></pre> Go to: <code>Settings \u2192 Apps \u2192 Connectivity Helper \u2192 Battery \u2192 Optimize battery usage</code> Select All apps Toggle OFF for Connectivity Helper  </p> <p>Xiaomi Devices Like many OEM devices, Xiaomi requires additional configuration:  </p> <p>After standard battery optimization steps: Open Security app \u2192 Battery \u2192 App battery saver Find Connectivity Helper \u2192 Set to No restrictions</p> <p>Additionally go to: <code>Settings \u2192 Apps \u2192 Permissions \u2192 Other permissions</code> Enable: - Change Wi-Fi connectivity - Change Bluetooth connectivity</p>"},{"location":"helper/connectivity/#android-version-considerations","title":"Android Version Considerations","text":"<p>Android 12\u201313 To use WiFi actions: - Connectivity Helper must be installed (even with universal helper app) - Enable special permissions: <code>Settings \u2192 Apps \u2192 Connectivity Helper \u2192 Other Permissions</code>   - Change Wi-Fi connectivity   - Change Bluetooth connectivity  </p> <p>Android 14+ <pre><code>- WiFi Limitation: Automating WiFi enabling requires manual confirmation!\n  System will always display a prompt requiring user approval.\n  No known workaround exists for this OS restriction.\n</code></pre></p> <p>Bluetooth and HotSpot actions work without limitations.</p>"},{"location":"helper/universal/","title":"\ud83d\udee0\ufe0f Universal Helper Installation Guide (Android 14+)","text":"<p>This guide provides a beginner-friendly step-by-step explanation on how to install the MacroDroid Universal Helper APK on devices running Android 14 or higher using ADB (Android Debug Bridge). Since Android 14 blocks direct installation of older APKs via standard methods, ADB is required. This tutorial assumes zero command-line experience, and explains how to set the <code>platform-tools</code> path, where to place the APK, and how to avoid common pitfalls.</p>"},{"location":"helper/universal/#requirements","title":"\ud83e\uddf0 Requirements","text":"<ul> <li>Android device with Android 14 or higher.</li> <li>PC or Mac (Windows, Linux, or macOS).</li> <li>USB cable (must support data transfer, not just charging).</li> <li>Universal Helper APK: Download here</li> <li>ADB Platform-Tools:</li> <li>Windows</li> <li>Linux</li> <li>macOS</li> </ul>"},{"location":"helper/universal/#prepare-your-android-device","title":"\ud83d\udcf1 Prepare Your Android Device","text":"<ol> <li>Enable Developer Options:</li> <li>Go to Settings \u2192 About phone.</li> <li> <p>Tap Build number 7 times until you see \u201cYou are now a developer!\u201d</p> </li> <li> <p>Enable USB Debugging:</p> </li> <li>Go to Settings \u2192 System \u2192 Developer options.</li> <li> <p>Turn on USB debugging.</p> </li> <li> <p>(Optional) Disable Permission Monitoring:</p> </li> <li>In Developer options, also enable:<ul> <li>Disable permission monitoring</li> <li>USB debugging (security settings) if available.</li> </ul> </li> </ol>"},{"location":"helper/universal/#set-up-adb-on-your-computer","title":"\ud83d\udcbb Set Up ADB on Your Computer","text":"<ol> <li>Download and Extract Platform-Tools:</li> <li>Download the ZIP file for your OS from the links above.</li> <li> <p>Extract the folder to an easy-to-access location (like Desktop or Downloads).</p> </li> <li> <p>Open Terminal or Command Prompt in <code>platform-tools</code> Folder:</p> </li> <li>Windows:<ul> <li>Go to the extracted <code>platform-tools</code> folder.</li> <li>Shift + Right Click inside the folder \u2192 Choose \"Open PowerShell window here\" or \"Open Command window here\".</li> </ul> </li> <li> <p>macOS/Linux:</p> <ul> <li>Open Terminal and use the <code>cd</code> command to enter the folder:    <pre><code>cd ~/Desktop/platform-tools\n</code></pre>    or    <pre><code>cd ~/Downloads/platform-tools\n</code></pre></li> </ul> </li> <li> <p>Check ADB is Working:</p> </li> <li>Run:      <pre><code>adb version\n</code></pre></li> <li> <p>You should see the installed ADB version.</p> </li> <li> <p>Connect Your Phone and Verify Connection:</p> </li> <li>Plug in your phone using the USB cable.</li> <li>Run:      <pre><code>adb devices\n</code></pre></li> <li>If you see your device listed, you're good. If it says \u201cunauthorized,\u201d check your phone for a popup to allow USB debugging.</li> </ol>"},{"location":"helper/universal/#install-the-universal-helper-apk","title":"\ud83d\udce6 Install the Universal Helper APK","text":"<ol> <li>Move the APK into the <code>platform-tools</code> Folder:</li> <li> <p>Place the file <code>MacroDroid_Universal_Helper.apk</code> inside the <code>platform-tools</code> folder you extracted.</p> </li> <li> <p>Install the APK via ADB:</p> </li> <li>In the terminal or command prompt, run:      <pre><code>adb install --bypass-low-target-sdk-block MacroDroid_Universal_Helper.apk\n</code></pre></li> <li> <p>You should see a success message.</p> </li> <li> <p>Grant Required Permission to the Helper App:</p> </li> <li>Run the following command:      <pre><code>adb shell pm grant com.arlosoft.macrodroid.helper android.permission.WRITE_SECURE_SETTINGS\n</code></pre></li> </ol>"},{"location":"helper/universal/#after-installation","title":"\u2705 After Installation","text":"<ul> <li>Open the Universal Helper App:</li> <li>Find the app on your phone and open it.</li> <li> <p>Grant all the permissions it asks for.</p> </li> <li> <p>Test in MacroDroid:</p> </li> <li>Open MacroDroid and test a feature that needs the Helper (like toggling Wi-Fi or changing brightness).</li> </ul>"},{"location":"helper/universal/#troubleshooting-common-issues","title":"\ud83d\udee0\ufe0f Troubleshooting Common Issues","text":"<ol> <li>ADB Permission Error:</li> <li>Error: <code>\"Neither user 2000 nor current process has android.permission.GRANT_RUNTIME_PERMISSIONS\"</code></li> <li> <p>Fix:</p> <ul> <li>Ensure Developer Options and USB Debugging are enabled.</li> <li>Check \u201cUSB debugging (security settings)\u201d in Developer Options.</li> <li>Restart phone and re-run the permission command.</li> </ul> </li> <li> <p>ADB Not Recognized / \u201cCommand not found\u201d:</p> </li> <li> <p>Fix:</p> <ul> <li>Make sure you\u2019re inside the <code>platform-tools</code> folder.</li> <li>Ensure <code>adb.exe</code> (Windows) or <code>adb</code> (Mac/Linux) is present.</li> </ul> </li> <li> <p>No Devices Found:</p> </li> <li> <p>Fix:</p> <ul> <li>Ensure USB debugging is enabled.</li> <li>Try another USB cable or port.</li> <li>Make sure your phone is set to File Transfer mode (not \u201cCharge only\u201d).</li> </ul> </li> <li> <p>APK Not Found or Installation Fails:</p> </li> <li>Fix:<ul> <li>Double-check the APK file name.</li> <li>Make sure the APK is inside the <code>platform-tools</code> folder.</li> <li>Run <code>adb install</code> from that same folder.</li> </ul> </li> </ol>"},{"location":"helper/universal/#i-additional-info","title":"\u2139\ufe0f Additional Info","text":"<ul> <li>Why the Helper is Needed:</li> <li> <p>As of MacroDroid v5.8+, certain functions (like changing secure system settings) require the Universal Helper due to Android restrictions.</p> </li> <li> <p>Tips for First-Time Users:</p> </li> <li>Keep filenames simple; don\u2019t rename the APK.</li> <li>Use copy-paste for commands to avoid typos.</li> <li> <p>Always run commands inside the <code>platform-tools</code> folder unless you\u2019ve added it to your system\u2019s PATH.</p> </li> <li> <p>Advanced ADB Use:</p> </li> <li>To use <code>adb</code> from anywhere, you can add <code>platform-tools</code> to your system\u2019s environment PATH.</li> </ul>"},{"location":"helper/universal/#official-resources","title":"\ud83d\udd17 Official Resources","text":"<ul> <li>ADB Docs: Android Debug Bridge (ADB)</li> <li>MacroDroid Forum: MacroDroid Community</li> </ul>"},{"location":"import_export/","title":"Exporting and Importing in MacroDroid","text":"<p>Description: <code>MacroDroid lets you export and import your automation setups in flexible ways \u2014 from full backups to individual macros, categories, or action blocks. This makes sharing, moving, or backing up your work simple and efficient.</code></p> <ul> <li> <p>Full backup and restore:   Use the Import/Export tile on the main MacroDroid screen. This option lets you export your entire setup into a single <code>.mdr</code> file or import one to restore everything at once. When importing, you can also choose to reset all your variables (integers, booleans, strings, and lists) back to their default empty or zero states.</p> </li> <li> <p>Exporting individual macros, categories, or action blocks:   For more precise backups or sharing, MacroDroid allows exporting parts of your setup through long-press menus or editor options:</p> </li> </ul> <p>Single Macro (<code>.macro</code> file)   - From the macro list, find the macro you want to export, then long-press it to open the context menu and tap Export Macro.   - Or from inside the macro editor, tap the 3-dot menu in the top-right corner and select Export Macro.   - What\u2019s included:     - The macro\u2019s triggers, actions, and constraints \u2014 everything needed to run it.     - Any global or local variables used within that macro.     - All referenced action blocks the macro depends on.</p> <p>Entire Category (<code>.category</code> file)   - In the macro categories list, long-press the category you want to export.   - Tap Export to save all the macros in that category together.   - What\u2019s included:     - All macros within that category.     - Any action blocks related to those macros.     - All variables associated with those macros.</p> <p>Action Block (<code>.ablock</code> file)   - Go to the Action Blocks screen where your reusable action blocks are listed.   - Long-press the action block you want to export and select Share.   - What\u2019s included:     - Only the selected action block itself \u2014 no macros or variables are included here.</p> <ul> <li>Exporting from inside a macro using the Export Macros action:   You can also back up your macros directly from within a macro\u2019s workflow by adding the Export Macros action. This lets you:  </li> <li>Save a full backup <code>.mdr</code> file to your device storage.  </li> <li>Store your macro setup as JSON text inside a variable, useful for advanced users who want to manipulate or upload their macros as text.  </li> <li>Important: To import macros stored as JSON in a variable, you must manually save the JSON as a <code>.mdr</code> file and import it via the main screen\u2019s import option.</li> </ul> <p>Types of formats when exporting: </p> <ul> <li><code>.mdr</code> \u2014 full setup backup including all macros, action blocks, global variables, and app settings </li> <li><code>.macro</code> \u2014 single macro including triggers, actions, constraints, local/global variables, and referenced action blocks </li> <li><code>.category</code> \u2014 full macro category with all macros inside, related action blocks, and associated variables </li> <li> <p><code>.ablock</code> \u2014 single standalone action block without macros or variables  </p> </li> <li> <p>Storage permission to save/load files.  </p> </li> <li>Careful use when importing full <code>.mdr</code> backups since they completely overwrite your current setup.</li> </ul> <p>\u26a0\ufe0f WARNING: Importing a <code>.mdr</code> file will erase your entire current MacroDroid setup, deleting all macros, action blocks, variables, and settings, replacing them with the imported content. This action is irreversible.  </p> <p>This full reset and overwrite only happen with <code>.mdr</code> files. Importing <code>.macro</code>, <code>.category</code>, or <code>.ablock</code> files will not erase your full setup, but simply add or replace those specific parts.</p> <p>Resetting variables on import: When importing a full <code>.mdr</code> backup, you can choose to reset all variables to their default states: - Integers \u2192 <code>0</code> - Booleans \u2192 <code>false</code> - Strings \u2192 empty - Lists \u2192 empty</p> <p>Simple explanation: Export your MacroDroid setup fully or partially, depending on what you need to back up or share. Full backups save everything in one <code>.mdr</code> file. Single macros and categories let you export only what you want. Action blocks export individual building blocks. Import carefully to avoid losing your current configuration, especially when doing full restores.</p>"},{"location":"macrodroid_log/system_log/","title":"\ud83d\udcc4 System log","text":""},{"location":"macrodroid_log/system_log/#macrodroid-system-log-guide","title":"MacroDroid System Log Guide","text":"<p>The System Log is MacroDroid's activity diary where all app events are recorded. It's essential for troubleshooting and understanding your automations. Here's what you need to know:</p>"},{"location":"macrodroid_log/system_log/#what-gets-recorded","title":"\ud83d\udcda What Gets Recorded","text":"<ul> <li>Trigger activations (e.g., \"WiFi connected\")</li> <li>Actions performed (e.g., \"Notification sent\")</li> <li>Constraints checks (e.g., \"Battery level constraint passed\")</li> <li>Variable changes (e.g., \"Variable %my_var updated\")</li> <li>Errors and warnings</li> <li>Macro start/end times</li> </ul>"},{"location":"macrodroid_log/system_log/#log-levels-explained","title":"\ud83d\udd22 Log Levels Explained","text":"<p>MacroDroid categorizes entries by importance:</p> Level Icon What It Shows Use Case Detailed \ud83d\udd0d Every single step (e.g., \"Checking constraint: Time between 8:00-9:00\") Deep debugging - very verbose Standard \ud83d\udccb Key milestones (e.g., \"Macro 'Alarm Off' triggered\", \"Action: Volume set to 0\") Daily monitoring (recommended) Warnings \u26a0\ufe0f Non-critical issues (e.g., \"Location unavailable for 'Weather Update'\") Potential problems review Errors \u274c Critical failures (e.g., \"Action failed: File not found\", \"Macro disabled\") Fixing broken macros"},{"location":"macrodroid_log/system_log/#filtering-the-log","title":"\ud83d\udd0d Filtering the Log","text":"<p>Tap the filter icon (top-right) to narrow results:</p> <p> Filter by: - Event Types:   - \u2705 Triggers   - \u2705 Actions   - \u2705 Constraints   - \u2705 Variables - Macros:   - Show specific macros or All Macros - Variables:   - Track individual variables</p>"},{"location":"macrodroid_log/system_log/#export-manage-options","title":"\ud83d\udce4 Export &amp; Manage Options","text":"<p>Use the \u22ee menu (top-right) for:</p> Option Description Share Log (TXT) Export as plain text - best for sharing Share Log (HTML) Color-coded formatted report - easier to read Clear Log Wipe all entries (start fresh) Change Text Size Adjust font size (Small \u2192 Large)"},{"location":"macrodroid_log/system_log/#pro-tips","title":"\ud83d\udca1 Pro Tips","text":"<ol> <li>Debugging: When a macro misbehaves, check the log to see where it failed</li> <li>Timestamp: All entries include exact execution times</li> <li>Color Coding: Errors (red), Warnings (orange), Actions (blue)</li> </ol> <p>The log automatically scrolls to show latest entries - perfect for real-time monitoring!</p> <p>Example entry: <code>[12:30:45] \ud83d\udd14 Trigger: Device Boot Completed \u2192 Macro 'Startup Setup' RUNNING</code> <code>[12:30:47] \u2705 Action: WiFi enabled (Macro: Startup Setup)</code> <code>[12:30:49] \u26a0\ufe0f Constraint failed: Battery &gt; 30% (Macro: Backup Photos)</code></p>"},{"location":"macrodroid_log/user_log/","title":"\ud83d\udcc4 User log","text":""},{"location":"macrodroid_log/user_log/#macrodroid-user-log-guide","title":"MacroDroid User Log Guide","text":"<p>The User Log in MacroDroid is a customizable activity tracker that records only what you choose. Unlike the System Log, which captures everything behind the scenes (including system-level details), the User Log focuses purely on the events you decide to log using the Log Event action.</p> <p>This makes it an ideal tool for monitoring key actions, debugging specific issues, or simply keeping a clean and relevant history of your macros.</p>"},{"location":"macrodroid_log/user_log/#what-gets-recorded","title":"\ud83d\udcda What Gets Recorded","text":"<p>The User Log only includes entries you\u2019ve explicitly set up. You have full control over what\u2019s tracked and how it's labeled.</p> <ul> <li>Events triggered by the Log Event action (e.g., \u201cWi-Fi turned on\u201d, \u201cSent SMS\u201d, \u201cEntered silent mode\u201d)</li> <li>Optional category tags for organization (default: General, or custom ones like \u201cBattery Alerts\u201d, \u201cLocation Triggers\u201d, etc.)</li> </ul> <p>Each log entry includes: - A timestamp - Your custom message - The log level you assign (explained below) - The category it belongs to</p>"},{"location":"macrodroid_log/user_log/#log-levels-explained","title":"\ud83d\udd22 Log Levels Explained","text":"<p>Log levels help you prioritize, organize, and filter entries based on their importance.</p> Level Icon Description Best For Detailed \ud83d\udd0d Fine-grained info (e.g., \u201cChecking step X\u201d) Step-by-step debugging Standard \ud83d\udccb General activity (e.g., \u201cMacro ran\u201d) Day-to-day tracking Warnings \u26a0\ufe0f Possible issues (e.g., \u201cLow battery detected\u201d) Spotting irregularities Errors \u274c Failures (e.g., \u201cAction failed\u201d) Identifying what broke <p>You can later filter logs by these levels to isolate what matters most.</p>"},{"location":"macrodroid_log/user_log/#export-manage-options","title":"\ud83d\udce4 Export &amp; Manage Options","text":"<p>From the \u22ee menu in the User Log screen, you can:</p> Option Description Share Log (TXT) Export as plain text for easy reading or sharing Share Log (HTML) Export a color-coded, formatted version for visual clarity Clear Log Delete all entries and start from scratch Change Text Size Choose from Small to Large for better readability"},{"location":"macrodroid_log/user_log/#why-use-it","title":"\ud83d\udca1 Why Use It?","text":"<ul> <li>Less cluttered than the System Log \u2014 only shows what\u2019s relevant to you  </li> <li>Great for debugging \u2014 isolate a problem by adding strategic log points  </li> <li>Beginner-friendly \u2014 no technical jargon, just custom messages you define  </li> <li>Powerful for experts \u2014 can be used for precise flow analysis and behavior tracking  </li> </ul> <p>It\u2019s your own custom journal for macro behavior. Use it to validate triggers, check if conditions are met, or understand what happened (and when) during macro execution.</p> <p>Reference: MacroDroid User Log Documentation</p>"},{"location":"magic_text/","title":"Magic Text in MacroDroid","text":"<p>Magic Text lets you inject live, dynamic data into your macros instead of static text. Think battery level, current time, sensor info, or location \u2014 values that update in real time when your macro runs. This turns basic automations into smart, context-aware power moves.</p> <p>Magic Text (requires trigger) Magic Text (no trigger needed)</p>"},{"location":"magic_text/#what-is-magic-text-and-where-to-find-it","title":"What Is Magic Text and Where to Find It","text":"<p>Whenever you see a \"...\" button next to a text field in triggers, actions, or constraints, that's your gateway to Magic Text. Clicking it shows context-relevant options you can use.</p> <p>These placeholders resolve their values at runtime, reflecting your device\u2019s current state.</p> <p>Example: If a notification says: <code>Battery at {battery}%</code> and your battery is at 42%, MacroDroid replaces <code>{battery}</code> with <code>42</code>, so the result is: \"Battery at 42%\"</p>"},{"location":"magic_text/#how-it-works","title":"How It Works","text":"<p>Magic Text acts like a live placeholder. When the macro is triggered, MacroDroid replaces the placeholder with its current value. Ideal for customizing messages or controlling logic in real time.</p>"},{"location":"magic_text/#manual-usage","title":"Manual Usage","text":"<p>If you know the Magic Text code, you can type it directly into a text field instead of selecting it.</p> <p>Keep in mind:</p> <ul> <li>Syntax matters. <code>{battery}</code> works \u2014 <code>{batery}</code> does not.  </li> <li>Always test. Run your macro to ensure Magic Text resolves correctly.</li> </ul>"},{"location":"magic_text/#formats","title":"Formats","text":"<p>There are two supported formats:</p> <ul> <li>Curly brackets <code>{}</code> \u2013 Modern and preferred.  </li> <li>Square brackets <code>[]</code> \u2013 Legacy format (still works, but less ideal).</li> </ul> <p>Examples:</p> <ul> <li><code>{battery}</code> \u2192 42  </li> <li><code>[battery]</code> \u2192 42 (functional, but not recommended)</li> </ul> <p>Use curly brackets for cleaner, more reliable results.</p>"},{"location":"magic_text/#starter-tips","title":"Starter Tips","text":"<ul> <li>Click the \"...\" button to explore available Magic Text options.</li> <li>Try <code>{battery}</code> in a notification to get started.</li> <li>Test your macros to confirm everything works as expected.</li> </ul>"},{"location":"magic_text/#why-it-matters","title":"Why It Matters","text":"<p>Magic Text transforms rigid automations into adaptive, intelligent workflows. It helps you display real-time data, respond to current conditions, and create smarter macros. Whether you're a beginner or a seasoned user, mastering Magic Text will greatly expand what you can build with MacroDroid.</p>"},{"location":"magic_text/list/","title":"List","text":"<p>Pagina obsoleta.</p>"},{"location":"magic_text/no_trigger/","title":"\ud83e\uddea Does not require a trigger to operate","text":""},{"location":"magic_text/no_trigger/#ampm","title":"Am/pm","text":""},{"location":"magic_text/no_trigger/#android-version","title":"Android version","text":""},{"location":"magic_text/no_trigger/#android-version-sdk-level","title":"Android version (sdk level)","text":""},{"location":"magic_text/no_trigger/#battery-current-now-ma","title":"Battery current now (ma)","text":""},{"location":"magic_text/no_trigger/#battery-temp-oc","title":"Battery temp \u00bac","text":""},{"location":"magic_text/no_trigger/#cell-connection-type","title":"Cell connection type","text":""},{"location":"magic_text/no_trigger/#cell-id","title":"Cell id","text":""},{"location":"magic_text/no_trigger/#cell-tower-signal-strength","title":"Cell tower signal strength","text":""},{"location":"magic_text/no_trigger/#clipboard-text","title":"Clipboard text","text":""},{"location":"magic_text/no_trigger/#create-guid","title":"Create guid","text":""},{"location":"magic_text/no_trigger/#current-battery","title":"Current battery %","text":""},{"location":"magic_text/no_trigger/#current-brightness","title":"Current brightness","text":""},{"location":"magic_text/no_trigger/#current-brightness-android-9-alternative","title":"Current brightness (android 9+ alternative)","text":""},{"location":"magic_text/no_trigger/#current-ip-address","title":"Current ip address","text":""},{"location":"magic_text/no_trigger/#current-ip-address-v6","title":"Current ip address (v6)","text":""},{"location":"magic_text/no_trigger/#current-volume-alarm","title":"Current volume (alarm)","text":""},{"location":"magic_text/no_trigger/#current-volume-bluetooth-voice","title":"Current volume (bluetooth voice)","text":""},{"location":"magic_text/no_trigger/#current-volume-media-music","title":"Current volume (media / music)","text":""},{"location":"magic_text/no_trigger/#current-volume-notification","title":"Current volume (notification)","text":""},{"location":"magic_text/no_trigger/#current-volume-ringer","title":"Current volume (ringer)","text":""},{"location":"magic_text/no_trigger/#current-volume-system-sounds","title":"Current volume (system sounds)","text":""},{"location":"magic_text/no_trigger/#current-volume-voice-call","title":"Current volume (voice call)","text":""},{"location":"magic_text/no_trigger/#day-of-the-month","title":"Day of the month","text":""},{"location":"magic_text/no_trigger/#day-of-the-week","title":"Day of the week","text":""},{"location":"magic_text/no_trigger/#device-manufacturer","title":"Device manufacturer","text":""},{"location":"magic_text/no_trigger/#device-model","title":"Device model","text":""},{"location":"magic_text/no_trigger/#device-serial","title":"Device serial","text":""},{"location":"magic_text/no_trigger/#device-uptime","title":"Device uptime","text":""},{"location":"magic_text/no_trigger/#device-uptime-s","title":"Device uptime (s)","text":""},{"location":"magic_text/no_trigger/#dictionaryarray-size","title":"Dictionary/array size","text":""},{"location":"magic_text/no_trigger/#foreground-app-activity-class","title":"Foreground app activity class","text":""},{"location":"magic_text/no_trigger/#foreground-app-name","title":"Foreground app name","text":""},{"location":"magic_text/no_trigger/#foreground-app-package","title":"Foreground app package","text":""},{"location":"magic_text/no_trigger/#hour-of-day","title":"Hour of day","text":""},{"location":"magic_text/no_trigger/#hour-of-day-12h","title":"Hour of day (12h)","text":""},{"location":"magic_text/no_trigger/#hour-of-day-leanding-zero","title":"Hour of day (leanding zero)","text":""},{"location":"magic_text/no_trigger/#imei","title":"Imei","text":""},{"location":"magic_text/no_trigger/#language-code","title":"Language code","text":""},{"location":"magic_text/no_trigger/#last-known-location-accuracy-meters","title":"Last known location (accuracy meters)","text":""},{"location":"magic_text/no_trigger/#last-known-location-altitude","title":"Last known location (altitude)","text":""},{"location":"magic_text/no_trigger/#last-known-location-lat","title":"Last known location (lat)","text":""},{"location":"magic_text/no_trigger/#last-known-location-latlon","title":"Last known location (lat,lon)","text":""},{"location":"magic_text/no_trigger/#last-known-location-link","title":"Last known location (link)","text":""},{"location":"magic_text/no_trigger/#last-known-location-lon","title":"Last known location (lon)","text":""},{"location":"magic_text/no_trigger/#last-known-location-time","title":"Last known location (time)","text":""},{"location":"magic_text/no_trigger/#last-location-speed-kmh","title":"Last location speed (kmh)","text":""},{"location":"magic_text/no_trigger/#last-location-speed-mph","title":"Last location speed (mph)","text":""},{"location":"magic_text/no_trigger/#location-area-code","title":"Location area code","text":""},{"location":"magic_text/no_trigger/#macro-category","title":"Macro category","text":""},{"location":"magic_text/no_trigger/#macro-id","title":"Macro id","text":""},{"location":"magic_text/no_trigger/#macro-name","title":"Macro name","text":""},{"location":"magic_text/no_trigger/#macrodroid-is-pro","title":"Macrodroid is pro","text":""},{"location":"magic_text/no_trigger/#macrodroid-version","title":"Macrodroid version","text":""},{"location":"magic_text/no_trigger/#minute","title":"Minute","text":""},{"location":"magic_text/no_trigger/#mobile-country-code","title":"Mobile country code","text":""},{"location":"magic_text/no_trigger/#mobile-network-code","title":"Mobile network code","text":""},{"location":"magic_text/no_trigger/#month","title":"Month","text":""},{"location":"magic_text/no_trigger/#month-as-digit","title":"Month (as digit)","text":""},{"location":"magic_text/no_trigger/#new-line","title":"New line","text":""},{"location":"magic_text/no_trigger/#power-onoff","title":"Power (on/off)","text":""},{"location":"magic_text/no_trigger/#ram-available","title":"Ram (available)","text":""},{"location":"magic_text/no_trigger/#ram-total","title":"Ram (total)","text":""},{"location":"magic_text/no_trigger/#screen-resolution","title":"Screen resolution","text":""},{"location":"magic_text/no_trigger/#screen-resolution-x","title":"Screen resolution (x)","text":""},{"location":"magic_text/no_trigger/#screen-resolution-y","title":"Screen resolution (y)","text":""},{"location":"magic_text/no_trigger/#screen-timeout-seconds","title":"Screen timeout (seconds)","text":""},{"location":"magic_text/no_trigger/#second","title":"Second","text":""},{"location":"magic_text/no_trigger/#sim-2-operator-name","title":"Sim 2 operator name","text":""},{"location":"magic_text/no_trigger/#sim-operator-name","title":"Sim operator name","text":""},{"location":"magic_text/no_trigger/#stopwatches","title":"Stopwatches","text":""},{"location":"magic_text/no_trigger/#storage-free-external","title":"Storage free (external)","text":""},{"location":"magic_text/no_trigger/#storage-free-internal","title":"Storage free (internal)","text":""},{"location":"magic_text/no_trigger/#storage-total-external","title":"Storage total (external)","text":""},{"location":"magic_text/no_trigger/#storage-total-internal","title":"Storage total (internal)","text":""},{"location":"magic_text/no_trigger/#ssid","title":"Ssid","text":""},{"location":"magic_text/no_trigger/#system-setting-global","title":"System setting (global)","text":""},{"location":"magic_text/no_trigger/#system-setting-secure","title":"System setting (secure)","text":""},{"location":"magic_text/no_trigger/#system-setting-system","title":"System setting (system)","text":""},{"location":"magic_text/no_trigger/#system-time","title":"System time","text":""},{"location":"magic_text/no_trigger/#system-time-ms","title":"System time (ms)","text":""},{"location":"magic_text/no_trigger/#variable-length-string","title":"Variable length string","text":""},{"location":"magic_text/no_trigger/#variable-type","title":"Variable type","text":""},{"location":"magic_text/no_trigger/#week-of-year","title":"Week of year","text":""},{"location":"magic_text/no_trigger/#webhook-base-url","title":"Webhook base url","text":""},{"location":"magic_text/no_trigger/#weather","title":"Weather","text":""},{"location":"magic_text/no_trigger/#wifi-signal-strength","title":"Wifi signal strength","text":""},{"location":"magic_text/no_trigger/#year","title":"Year","text":""},{"location":"magic_text/no_trigger/am_pm/","title":"Am/pm","text":"<p>Magic Text: <code>{am_pm}</code></p> <p>Returns: <code>am</code> or <code>pm</code> depending on the current time.</p> <p>Example: At <code>11:30 AM</code> \u2192 returns <code>am</code> At <code>7:00 PM</code> \u2192 returns <code>pm</code></p> <p>Simple explanation: Shows whether the current time is before or after noon.</p>"},{"location":"magic_text/no_trigger/android_version/","title":"Android version","text":"<p>Magic Text: <code>{android_version}</code></p> <p>Returns: The Android version number of the device.</p> <p>Example: If the device runs Android 13 \u2192 returns <code>13</code> If the device runs Android 11 \u2192 returns <code>11</code></p> <p>Simple explanation: Shows the major Android OS version running on the device.</p>"},{"location":"magic_text/no_trigger/android_version_sdk_level/","title":"Android version (sdk level)","text":"<p>Magic Text: <code>{android_version_sdk}</code></p> <p>Returns: The SDK level of the current Android version.</p> <p>Example: Android 14 \u2192 returns <code>34</code> Android 12 \u2192 returns <code>31</code></p> <p>Simple explanation: Shows the Android SDK level number for the device\u2019s OS.</p>"},{"location":"magic_text/no_trigger/battery_current_now/","title":"Battery current now (ma)","text":"<p>Magic Text: <code>{battery_current_now}</code></p> <p>Returns: The current battery flow in milliamps (mA) at this moment.</p> <p>Example: While charging \u2192 returns <code>+800</code> While discharging \u2192 returns <code>-350</code></p> <p>Simple explanation: Shows the instantaneous current going into or out of the battery.</p>"},{"location":"magic_text/no_trigger/battery_temp/","title":"Battery temp \u00bac","text":"<p>Magic Text: <code>{battery_temp}</code></p> <p>Returns: The current battery temperature in degrees Celsius.</p> <p>Example: Returns <code>34</code> when the battery is at 34\u00b0C</p> <p>Simple explanation: Shows how hot or cold your battery currently is in \u00b0C.</p>"},{"location":"magic_text/no_trigger/cell_connection_type/","title":"Cell connection type","text":"<p>Magic Text: <code>{cell_connection_type}</code></p> <p>Returns: The current mobile data connection type (e.g., 3G, 4G, 5G).</p> <p>Example: Connected to 4G \u2192 returns <code>4g</code> Connected to 5G \u2192 returns <code>5g</code></p> <p>Note: Can also appear as <code>LTE</code>, <code>LTE (5G NSA)</code>, or other variations depending on the network.</p> <p>Simple explanation: Shows your current mobile network type or generation.</p>"},{"location":"magic_text/no_trigger/cell_id/","title":"Cell id","text":"<p>Magic Text: <code>{cell_id}</code></p> <p>Returns: The unique ID of the cellular tower (cell) your device is currently connected to.</p> <p>Example: A possible value: <code>3102000000</code> (where <code>310200</code> is the LAC)</p> <p>Simple explanation: Identifies the specific cell tower your phone is using.</p>"},{"location":"magic_text/no_trigger/cell_signal_strength/","title":"Cell tower signal strength","text":"<p>Magic Text: <code>{cell_signal_strength}</code></p> <p>Returns: The signal strength your device receives from the nearest cell tower, measured in decibels-milliwatts (dBm). Stronger signal: around <code>-50 dBm</code> Weaker signal: around <code>-110 dBm</code></p> <p>Example: Good signal \u2192 returns <code>-60</code> Weak signal \u2192 returns <code>-105</code></p> <p>Simple explanation: Shows how strong or weak your cellular signal is using dBm units.</p>"},{"location":"magic_text/no_trigger/clipboard/","title":"Clipboard text","text":"<p>Magic Text: <code>{clipboard}</code></p> <p>Returns: The current text content stored in the clipboard.</p> <p>Important: Due to Android 10+ restrictions, apps cannot read clipboard content while running in the background. This action creates a temporary invisible overlay to read the clipboard content in MacroDroid. You must use the Clipboard Refresh action before using this Magic Text.</p> <p>Example: If you copied \"Hello World\" \u2192 returns <code>Hello World</code></p> <p>Simple explanation: Gets the text currently stored in the clipboard, but requires a refresh action due to Android limits.</p>"},{"location":"magic_text/no_trigger/country_code/","title":"Country code","text":"<p>Magic Text: <code>{country_code}</code></p> <p>Returns: The two-letter ISO country code representing the device\u2019s current country or network region.</p> <p>Example: If the device is in Mexico \u2192 returns <code>mx</code> If the device is in the United States \u2192 returns <code>us</code></p> <p>Simple explanation: Shows the country code where the device is currently located or registered.</p>"},{"location":"magic_text/no_trigger/create_guid/","title":"Create GUID","text":"<p>Magic Text: <code>{guid}</code></p> <p>Returns: A newly generated GUID (Globally Unique Identifier) in standard format.</p> <p>Example: Returns something like <code>3f2504e0-4f89-11d3-9a0c-0305e82c3301</code></p> <p>Simple explanation: Generates a unique identifier string for use in tracking or referencing.</p>"},{"location":"magic_text/no_trigger/current_battery/","title":"Current battery %","text":"<p>Magic Text: <code>{battery}</code> / <code>{battery_int}</code></p> <p>Returns: Current battery level as a percentage. <code>{battery}</code> returns the value with decimals (if any). <code>{battery_int}</code> returns the value as an integer (no decimals).</p> <p>Example: Battery at 80.5% \u2192 <code>{battery}</code> returns <code>80.5</code> Battery at 80.5% \u2192 <code>{battery_int}</code> returns <code>80</code></p> <p>Simple explanation: Shows the current battery percentage, with or without decimals.</p>"},{"location":"magic_text/no_trigger/current_brightness/","title":"Current brightness","text":"<p>Magic Text: <code>{current_brightness}</code></p> <p>Returns: Current screen brightness level as a number (percentage).</p> <p>Example: If brightness is set to 50% \u2192 returns <code>50</code></p> <p>Simple explanation: Shows the current screen brightness as a percentage.</p>"},{"location":"magic_text/no_trigger/current_brightness_alternative/","title":"Current brightness (android 9+ alternative)","text":"<p>Magic Text: <code>{current_brightness_alternative}</code></p> <p>Returns: Current screen brightness level as a number (percentage).</p> <p>Note: This is an alternative method for devices running Android 9 and above.</p> <p>Example: If brightness is set to 50% \u2192 returns <code>50</code></p> <p>Simple explanation: Alternative way to get screen brightness on Android 9+ devices.</p>"},{"location":"magic_text/no_trigger/current_ip_address/","title":"Current ip address","text":"<p>Magic Text: <code>{ip}</code></p> <p>Returns: Current IP address of the device in standard IPv4 format (e.g., <code>172.217.12.141</code>).</p> <p>Example: Returns something like <code>172.217.12.141</code></p> <p>Simple explanation: Shows the device\u2019s current IPv4 address.</p>"},{"location":"magic_text/no_trigger/current_ip_address_v6/","title":"Current ip address (v6)","text":"<p>Magic Text: <code>{ip6}</code></p> <p>Returns: Current IP address of the device in IPv6 format (e.g., <code>2001:0db8:85a3:0000:0000:8a2e:0370:7334</code>).</p> <p>Example: Returns something like <code>2001:0db8:85a3:0000:0000:8a2e:0370:7334</code></p> <p>Simple explanation: Shows the device\u2019s current IPv6 address.</p>"},{"location":"magic_text/no_trigger/current_volume_alarm/","title":"Current volume (alarm)","text":"<p>Magic Text: <code>{vol_alarm}</code></p> <p>Returns: Current volume level used for alarms (numeric value).</p> <p>Example: If alarm volume is set to 7 \u2192 returns <code>7</code></p> <p>Simple explanation: Shows the current volume level for alarms.</p>"},{"location":"magic_text/no_trigger/current_volume_bluetooth_voice/","title":"Current volume (bluetooth voice)","text":"<p>Magic Text: <code>{vol_bt_voice}</code></p> <p>Returns: Current volume level used for multimedia and calls via Bluetooth (numeric value).</p> <p>Example: If Bluetooth voice volume is set to 5 \u2192 returns <code>5</code></p> <p>Simple explanation: Shows the current volume level for Bluetooth voice calls and media.</p>"},{"location":"magic_text/no_trigger/current_volume_media_music/","title":"Current volume (media / music)","text":"<p>Magic Text: <code>{vol_music}</code></p> <p>Returns: Current volume level used for media and music (numeric value).</p> <p>Example: If media volume is set to 8 \u2192 returns <code>8</code></p> <p>Simple explanation: Shows the current volume level for media and music playback.</p>"},{"location":"magic_text/no_trigger/current_volume_notification/","title":"Current volume (notification)","text":"<p>Magic Text: <code>{vol_notif}</code></p> <p>Returns: Current volume level used for notification alerts (numeric value).</p> <p>Example: If notification volume is set to 6 \u2192 returns <code>6</code></p> <p>Simple explanation: Shows the current volume level for notification sounds.</p>"},{"location":"magic_text/no_trigger/current_volume_ringer/","title":"Current volume (ringer)","text":"<p><code>{vol_ring}</code></p> <p>Returns: Current volume level used for ringtone (numeric value).</p> <p>Example: If ringtone volume is set to 7 \u2192 returns <code>7</code></p>"},{"location":"magic_text/no_trigger/current_volume_system_sounds/","title":"Current volume (system sounds)","text":"<p><code>{vol_system}</code></p> <p>Returns: Current volume level used for system sounds (numeric value). Examples include screen locking/unlocking, touch sounds, and more.</p> <p>Example: If system sounds volume is set to 5 \u2192 returns <code>5</code></p>"},{"location":"magic_text/no_trigger/current_volume_voice_call/","title":"Current volume (voice call)","text":"<p><code>{vol_call}</code></p> <p>Returns: Current volume level during a voice call (numeric value).</p> <p>Example: If call volume is set to 8 \u2192 returns <code>8</code></p>"},{"location":"magic_text/no_trigger/day_of_the_month/","title":"Day of the month","text":"<p><code>{dayofmonth}</code></p> <p>Returns: Current day of the month as a two-digit number with a leading zero for days 1 to 9. Example: Returns <code>04</code> for the 4th day, <code>24</code> for the 24th day.</p>"},{"location":"magic_text/no_trigger/day_of_the_week/","title":"Day of the week","text":"<p><code>{dayofweek}</code></p> <p>Returns: Full name of the current day of the week. Example: Returns <code>Monday</code>, <code>Friday</code>, <code>Sunday</code>, etc.</p>"},{"location":"magic_text/no_trigger/device_manufacturer/","title":"Device manufacturer","text":"<p>Magic Text: <code>{device_manufacturer}</code></p> <p>Returns: The brand or manufacturer name of your device.</p> <p>Example: Returns <code>Samsung</code>, <code>OnePlus</code>, <code>Google</code>, etc.</p>"},{"location":"magic_text/no_trigger/device_model/","title":"Device model","text":"<p>Magic Text: <code>{device_model}</code></p> <p>Returns: The model name of your device, as reported by the system.</p> <p>Example: Returns <code>OnePlus 12</code> or <code>SM-G991B</code> depending on the device.</p>"},{"location":"magic_text/no_trigger/device_serial/","title":"Device serial","text":"<p>Magic Text: <code>{serial}</code></p> <p>Returns: The serial number of the device.</p> <p>Example: Returns something like <code>ABCDEF123456</code>.</p> <p>Note: On newer Android versions (Android 10+), this value may be restricted or return empty due to privacy and permission limitations.</p>"},{"location":"magic_text/no_trigger/device_uptime/","title":"Device uptime","text":"<p>Magic Text: <code>{uptime}</code></p> <p>Returns: The duration since the device was last restarted, in <code>hour:minute:second</code> format.</p> <p>Example: If your device has been on for 5 hours, 42 minutes, and 18 seconds \u2192 returns <code>05:42:18</code></p>"},{"location":"magic_text/no_trigger/device_uptime_s/","title":"Device uptime (s)","text":"<p>Magic Text: <code>{uptime_secs}</code></p> <p>Returns: The amount of time the device has been on (since last reboot), in seconds.</p> <p>Example: If your device has been running for 50 minutes \u2192 returns <code>3000</code></p>"},{"location":"magic_text/no_trigger/dictionary_array_size/","title":"Dictionary/array size","text":"<p>Magic Text: <code>{size=}</code></p> <p>Returns: The number of elements in an array or dictionary.</p> <p>Example: If you have an array called <code>my_array</code> with values <code>[0, 1, 2]</code>, then: <code>{size=my_array}</code> \u2192 returns <code>3</code></p> <p>Note: The name after <code>=</code> must exactly match the array or dictionary variable you're referencing.</p>"},{"location":"magic_text/no_trigger/foreground_app_activity_class/","title":"Foreground app activity class","text":"<p>Magic Text: <code>{fg_app_activity}</code></p> <p>Returns: The activity class name of the application currently in the foreground.</p> <p>Example: If MacroDroid is active \u2192 returns <code>com.arlosoft.macrodroid.MainActivity</code></p> <p>Simple explanation: It tells you exactly which screen or part of the app is being shown, not just the app name.</p>"},{"location":"magic_text/no_trigger/foreground_app_name/","title":"Foreground app name","text":"<p>Magic Text: <code>{fg_app_name}</code></p> <p>Returns: The name of the application currently in the foreground.</p> <p>Example: If MacroDroid is the active app \u2192 returns <code>MacroDroid</code></p> <p>Simple explanation: Shows the visible app's name \u2014 the one you're actively using at that moment.</p>"},{"location":"magic_text/no_trigger/foreground_app_package/","title":"Foreground app package","text":"<p>Magic Text: <code>{fg_app_package}</code></p> <p>Returns: The package identifier of the application currently in the foreground.</p> <p>Example: If MacroDroid is the active app \u2192 returns <code>com.arlosoft.macrodroid</code></p> <p>Usage: Can be used in any text field that supports Magic Text (e.g., logging, condition checks, notifications).</p> <p>Simple explanation: Tells you which app is currently on screen, using its package name (like an app ID).</p>"},{"location":"magic_text/no_trigger/hour_of_day/","title":"Hour of day","text":"<p>Magic Text: <code>{hour}</code></p> <p>Returns: Current hour of the day in 24-hour format (00 to 23), with leading zero.</p> <p>Example: At 9:30 AM \u2192 returns <code>09</code> At 3:45 PM \u2192 returns <code>15</code></p> <p>Simple explanation: This Magic Text gives you the current hour in 24-hour time, always with two digits for consistency.</p>"},{"location":"magic_text/no_trigger/hour_of_day_12h/","title":"Hour of day (12h)","text":"<p>Magic Text: <code>{hour12}</code></p> <p>Returns: Current hour of the day in 12-hour format (1 to 12).</p> <p>Example: At 9:30 AM \u2192 returns <code>9</code> At 3:45 PM \u2192 returns <code>3</code></p> <p>Usage: Can be used in any text field that supports Magic Text (e.g., notifications, TTS, logs).</p> <p>Simple explanation: Gives you the current hour like a regular 12-hour clock\u2014great for friendly time formats.</p>"},{"location":"magic_text/no_trigger/hour_of_day_leanding_zero/","title":"Hour of day (leading zero)","text":"<p>Magic Text: <code>{hour_0}</code></p> <p>Returns: Current hour of the day in 24-hour format with leading zero (00 to 23).</p> <p>Example: At 9:30 AM \u2192 returns <code>09</code> At 3:45 PM \u2192 returns <code>15</code></p> <p>Simple explanation: Always gives you the current hour with two digits\u2014perfect for timestamps and logs.</p>"},{"location":"magic_text/no_trigger/imei/","title":"Imei","text":"<p>Magic Text: <code>{imei}</code></p> <p>Returns: The IMEI number of the device. \u26a0\ufe0f Note: Since Android 10+, this information is no longer accessible due to privacy restrictions.</p> <p>Example: Returns the IMEI number if accessible; otherwise, returns empty or unavailable.</p> <p>Simple explanation: This Magic Text tries to give you the device\u2019s IMEI, but on modern Android versions, it\u2019s often blocked for privacy reasons.</p>"},{"location":"magic_text/no_trigger/language_code/","title":"Language code","text":"<p>Magic Text: <code>{language_code}</code></p> <p>Returns: The language code currently in use. Example: English is <code>en</code>.</p> <p>Example: Returns <code>en</code> for English, <code>es</code> for Spanish, etc.</p> <p>Simple explanation: This Magic Text gives you the two-letter code representing the language your device is using right now.</p>"},{"location":"magic_text/no_trigger/last_known_location_%28accuracy_meters/","title":"Last known location (accuracy meters)","text":"<p>Magic Text: <code>{last_loc_accuracy}</code></p> <p>Returns: The accuracy (in meters) of the most recent known location. For example, it might return <code>10</code> meaning 10 meters accuracy.</p> <p>Example: Returns <code>10</code> indicating the GPS location accuracy is within 10 meters.</p> <p>Simple explanation: This Magic Text tells you how precise the last GPS location reading is, measured in meters.</p>"},{"location":"magic_text/no_trigger/last_known_location_%28lon%29/","title":"Last known location (lon)","text":"<p>Magic Text: <code>{last_loc_long}</code></p> <p>Returns: The longitude of the last known location.</p> <p>Example: Returns <code>-23.215252</code></p> <p>Simple explanation: This Magic Text gives you the longitude coordinate of the most recent location your device recorded.</p>"},{"location":"magic_text/no_trigger/last_known_location_altitude/","title":"Last known location (altitude)","text":"<p>Magic Text: <code>{last_loc_alt}</code></p> <p>Returns: The altitude above sea level of the last known location, in meters.</p> <p>Example: Returns <code>250</code> meaning the last known location is 250 meters above sea level.</p> <p>Simple explanation: This Magic Text tells you how high above sea level your device was at its last recorded location.</p>"},{"location":"magic_text/no_trigger/last_known_location_lat/","title":"Last known location (lat)","text":"<p>Magic Text: <code>{last_loc_lat}</code></p> <p>Returns: The latitude of the last known location.</p> <p>Example: Returns <code>40.7128</code> meaning the last known location is at latitude 40.7128.</p> <p>Simple explanation: This Magic Text gives you the latitude coordinate of the most recent location your device recorded.</p>"},{"location":"magic_text/no_trigger/last_known_location_lat_lon/","title":"Last known location (lat,lon)","text":"<p>Magic Text: <code>{last_loc_latlong}</code></p> <p>Returns: The latitude and longitude of the last known location, separated by a comma.</p> <p>Example: Returns <code>23.44325,-23.215252</code> meaning latitude 23.44325 and longitude -23.215252.</p> <p>Simple explanation: This Magic Text provides both the latitude and longitude coordinates of your device's last recorded location in a single string.</p>"},{"location":"magic_text/no_trigger/last_known_location_link/","title":"Last known location (link)","text":"<p>Magic Text: <code>{last_loc_link}</code></p> <p>Returns: A Google Maps link pointing to the last known location.</p> <p>Example: Returns <code>https://maps.google.com/?q=23.44325,-23.215252</code></p> <p>Simple explanation: This Magic Text generates a clickable Google Maps URL showing the exact last known location of your device.</p>"},{"location":"magic_text/no_trigger/last_known_location_time/","title":"Last known location (time)","text":"<p>Magic Text: <code>{last_loc_age_timestamp}</code></p> <p>Returns: The timestamp of the last known location in format <code>year-month-day hour:minute:second</code>.</p> <p>Example: Returns <code>2025-05-27 14:35:22</code></p> <p>Simple explanation: This Magic Text tells you exactly when your device last recorded a location update.</p>"},{"location":"magic_text/no_trigger/last_location_speed_kmh/","title":"Last location speed (kmh)","text":"<p>Magic Text: <code>{last_loc_speed_kmh}</code></p> <p>Returns: The current speed in kilometers per hour (km/h). Requires a location monitoring app like Waze or Google Maps; otherwise, the value will be <code>0</code>.</p> <p>Example: Returns <code>45</code> (km/h)</p> <p>Simple explanation: This Magic Text shows your current speed in km/h if a compatible location app is running; otherwise, it returns zero.</p>"},{"location":"magic_text/no_trigger/last_location_speed_mph/","title":"Last location speed (mph)","text":"<p>Magic Text: <code>{last_loc_speed_mph}</code></p> <p>Returns: The current speed in miles per hour (mph). Requires a location monitoring app like Waze or Google Maps; otherwise, the value will be <code>0</code>.</p> <p>Example: Returns <code>30</code> (mph)</p> <p>Simple explanation: This Magic Text tells you how fast you\u2019re moving in mph, but only if a compatible location app is running.</p>"},{"location":"magic_text/no_trigger/location_area_code/","title":"Location area code","text":"<p>Magic Text: <code>{lac}</code></p> <p>Returns: The Location Area Code (LAC), a 16-bit number identifying a location area in a cellular network. Each location area contains between 1 and 65,534 radio cells.</p> <p>Example: Returns <code>310-200</code></p> <p>Simple explanation: This Magic Text provides the code that identifies your current location area within the mobile network.</p>"},{"location":"magic_text/no_trigger/macro_category/","title":"Macro category","text":"<p>Magic Text: <code>{macro_category}</code></p> <p>Returns: Name of the category of the macro that was invoked. Examples include: utilities, maps &amp; navigation, notifications, productivity, or custom category names.</p> <p>Example: For a macro in \"utilities\" \u2192 returns <code>utilities</code></p> <p>Simple explanation: This Magic Text tells you the category under which the triggered macro is classified.</p>"},{"location":"magic_text/no_trigger/macro_id/","title":"Macro id","text":"<p>Magic Text: <code>{macro_id}</code></p> <p>Returns: A GUID number uniquely identifying a macro file.</p> <p>Example: <code>123e4567-e89b-12d3-a456-426614174000</code></p> <p>Simple explanation: This Magic Text provides a unique identifier for each macro, useful for tracking or referencing specific macros.</p>"},{"location":"magic_text/no_trigger/macro_name/","title":"Macro name","text":"<p>Magic Text: <code>{macro_name}</code></p> <p>Returns: The name of the macro that was invoked.</p> <p>Example: If the macro is called \"Morning Alarm\" \u2192 returns <code>Morning Alarm</code></p> <p>Simple explanation: This Magic Text gives you the exact name of the macro currently running or triggered.</p>"},{"location":"magic_text/no_trigger/macrodroid_is_pro/","title":"Macrodroid is pro","text":"<p>Magic Text: <code>{macrodroid_is_pro}</code></p> <p>Returns: Boolean value (<code>true</code> or <code>false</code>) indicating if MacroDroid is the Pro version.</p> <p>Example: If you have Pro \u2192 returns <code>true</code> If not \u2192 returns <code>false</code></p> <p>Simple explanation: This Magic Text tells you whether you\u2019re running the paid Pro version of MacroDroid.</p>"},{"location":"magic_text/no_trigger/macrodroid_version/","title":"Macrodroid version","text":"<p>Magic Text: <code>{macrodroid_version}</code></p> <p>Returns: Version of MacroDroid installed, e.g., <code>5.54.x</code>.</p> <p>Example: Installed MacroDroid version \u2192 returns <code>5.55.0</code></p> <p>Simple explanation: This Magic Text tells you the exact version number of the MacroDroid app running on your device.</p>"},{"location":"magic_text/no_trigger/minute/","title":"Minute","text":"<p>Magic Text: <code>{minute}</code></p> <p>Returns: Current minute (0\u201359).</p> <p>Example: At 12:34 \u2192 returns <code>34</code></p> <p>Simple explanation: This Magic Text shows the current minute of the hour on your device.</p>"},{"location":"magic_text/no_trigger/mobile_country_code/","title":"Mobile country code","text":"<p>Magic Text: <code>{mcc}</code></p> <p>Returns: The Mobile Country Code (MCC) of the SIM card currently in the device.</p> <p>Example: If the SIM is from the United States \u2192 returns <code>310</code> If the SIM is from Mexico \u2192 returns <code>334</code></p> <p>Simple explanation: Identifies the country of your mobile network provider.</p>"},{"location":"magic_text/no_trigger/mobile_network_code/","title":"Mobile network code","text":"<p>Magic Text: <code>{mnc}</code></p> <p>Returns: Mobile Network Code (MNC), a two or three-digit code that uniquely identifies a mobile network operator within a country.</p> <p>Example: For a Telcel SIM \u2192 might return <code>012</code></p> <p>Simple explanation: This Magic Text gives you the numeric code assigned to your mobile network operator, used internally for network identification.</p>"},{"location":"magic_text/no_trigger/month/","title":"Month","text":"<p>Magic Text: <code>{month}</code></p> <p>Returns: Current month as a number (e.g., 1 for January, 12 for December).</p> <p>Example: In June \u2192 returns <code>6</code></p> <p>Simple explanation: This Magic Text returns the current month number of the year.</p>"},{"location":"magic_text/no_trigger/month_as_digit/","title":"Month (as digit)","text":"<p>Magic Text: <code>{month_digit}</code></p> <p>Returns: Current month as a digit (e.g., 1 for January, 12 for December).</p> <p>Example: In June \u2192 returns <code>6</code></p> <p>Simple explanation: This Magic Text returns the current month number of the year.</p>"},{"location":"magic_text/no_trigger/new_line/","title":"New line","text":"<p>Magic Text: <code>\\n</code></p> <p>Returns: A special character that indicates the end of a line and the start of a new one. It helps organize text for better readability.</p> <p>Example: <code>Hello\\nworld</code> outputs as: Hello world</p> <p>Simple explanation: This Magic Text inserts a line break, letting you split text into multiple lines.</p>"},{"location":"magic_text/no_trigger/power_on_off/","title":"Power (on/off)","text":"<p>Magic Text: <code>{power}</code></p> <p>Returns: <code>on</code> or <code>off</code> depending on the current power state. For example, if the charger is connected, it returns <code>on</code>.</p> <p>Example: Charger connected \u2192 returns <code>on</code> Charger disconnected \u2192 returns <code>off</code></p> <p>Simple explanation: This Magic Text tells you whether your device is currently charging (<code>on</code>) or running on battery (<code>off</code>).</p>"},{"location":"magic_text/no_trigger/ram_available/","title":"Ram (available)","text":"<p>Magic Text: <code>{ram_available}</code></p> <p>Returns: Available RAM value in GB.</p> <p>Example: If your device has 2 GB free RAM \u2192 returns <code>2.00</code></p> <p>Simple explanation: This Magic Text shows how much RAM is currently free and available for use on your device, measured in gigabytes.</p>"},{"location":"magic_text/no_trigger/ram_total/","title":"Ram (total)","text":"<p>Magic Text: <code>{ram_total}</code></p> <p>Returns: Real value of total RAM in GB (not theoretical). For example, on a device with 6 GB RAM, it might return <code>5.79</code>.</p> <p>Example: Device with 6 GB RAM \u2192 returns <code>5.79</code></p> <p>Simple explanation: This Magic Text shows the actual usable total RAM of your device in gigabytes, which is usually slightly less than the advertised amount.</p>"},{"location":"magic_text/no_trigger/screen_resolution/","title":"Screen resolution","text":"<p>Magic Text: <code>{screen_res}</code></p> <p>Returns: Device screen resolution as <code>width,height</code> in pixels.</p> <p>Example: For a device with 1080 pixels wide and 2400 pixels high \u2192 returns <code>1080,2400</code></p> <p>Simple explanation: This Magic Text gives you the exact screen size of your device in pixels, showing width and height separated by a comma.</p>"},{"location":"magic_text/no_trigger/screen_resolution_x/","title":"Screen resolution (x)","text":"<p>Magic Text: <code>{screen_res_x}</code></p> <p>Returns: Device screen width in pixels (X resolution).</p> <p>Example: For a device with resolution 1080x2400 \u2192 returns <code>1080</code></p> <p>Simple explanation: This Magic Text returns the horizontal pixel count (width) of your device\u2019s screen.</p>"},{"location":"magic_text/no_trigger/screen_resolution_y/","title":"Screen resolution (y)","text":"<p>Magic Text: <code>{screen_res_y}</code></p> <p>Returns: Device screen height in pixels (Y resolution).</p> <p>Example: For a device with resolution 1080x2400 \u2192 returns <code>2400</code></p> <p>Simple explanation: This Magic Text returns the vertical pixel count (height) of your device\u2019s screen.</p>"},{"location":"magic_text/no_trigger/screen_timeout_seconds/","title":"Screen timeout (seconds)","text":"<p>Magic Text: <code>{screen_timeout}</code></p> <p>Returns: Time in seconds before the screen automatically turns off due to inactivity.</p> <p>Example: If the screen timeout is set to 30 seconds \u2192 returns <code>30</code></p> <p>Simple explanation: This Magic Text tells you how many seconds your device waits before turning off the screen when idle.</p>"},{"location":"magic_text/no_trigger/second/","title":"Second","text":"<p>Magic Text: <code>{second}</code></p> <p>Returns: Current second of the minute (0-59).</p> <p>Example: At 12:34:45 \u2192 returns <code>45</code></p> <p>Simple explanation: This Magic Text returns the current second value of the ongoing minute, from 0 to 59.</p>"},{"location":"magic_text/no_trigger/sim_2_operator_name/","title":"Sim 2 operator name","text":"<p>Magic Text: <code>{sim2_operator_name}</code></p> <p>Returns: Name of your telephone company (SIM operator) for the second SIM slot.</p> <p>Example: If your SIM 2 is from \"Telcel\" \u2192 returns <code>Telcel</code></p> <p>Simple explanation: This Magic Text shows the mobile network operator name for the SIM card in your device\u2019s second SIM slot.</p>"},{"location":"magic_text/no_trigger/sim_operator_name/","title":"Sim operator name","text":"<p>Magic Text: <code>{sim_operator_name}</code></p> <p>Returns: Name of your telephone company (SIM operator).</p> <p>Example: If your SIM is from \"Telcel\" \u2192 returns <code>Telcel</code></p> <p>Simple explanation: This Magic Text gives you the name of the mobile network operator your SIM card is currently using.</p>"},{"location":"magic_text/no_trigger/ssid/","title":"SSID","text":"<p>Magic Text: <code>{ssid}</code></p> <p>Returns: The name (SSID) of the Wi-Fi network your device is currently connected to.</p> <p>Example: <code>Home_Network</code> <code>CoffeeShop_WiFi</code></p> <p>Simple explanation: This Magic Text tells you the exact name of the Wi-Fi network your device is using right now.</p>"},{"location":"magic_text/no_trigger/stopwatches/","title":"Stopwatches","text":"<p>Magic Text: <code>{stopwatch=demo}</code></p> <p>Returns: Total time of the stopwatch named demo in seconds (decimal format). Example: <code>0.0</code> or <code>195.5</code></p> <p>Usage: Requires a stopwatch named demo to be created. Returns nothing if no stopwatch exists with that name.</p>"},{"location":"magic_text/no_trigger/stopwatches/#stopwatch-time-formatted","title":"Stopwatch time (formatted)","text":"<p>Magic Text: <code>{stopwatchtime=demo}</code> / <code>{stopwatchtime_no_secs=demo}</code></p> <p>Returns: Total time of the stopwatch named demo in either <code>hh:mm:ss</code> or <code>hh:mm</code> format. Examples: - <code>00:00</code> (hh:mm) - <code>00:00:00</code> (hhss)</p> <p>Simple explanation: These Magic Texts return the elapsed time of a named stopwatch in human-readable formats, with or without seconds.</p>"},{"location":"magic_text/no_trigger/storage_free_external/","title":"Storage free (external)","text":"<p>Magic Text: <code>{storage_external_free}</code></p> <p>Returns: Amount of free space available on external storage (e.g., SD card) in GB.</p> <p>Example: <code>136GB</code></p> <p>Simple explanation: This Magic Text shows how much free space you have left on your external storage, like an SD card, measured in gigabytes.</p>"},{"location":"magic_text/no_trigger/storage_free_internal/","title":"Storage free (internal)","text":"<p>Magic Text: <code>{storage_internal_free}</code></p> <p>Returns: Amount of free space available on internal storage in GB.</p> <p>Example: <code>136GB</code></p> <p>Simple explanation: This Magic Text shows how much free space is left on your device's internal storage, measured in gigabytes.</p>"},{"location":"magic_text/no_trigger/storage_total_external/","title":"Storage total (external)","text":"<p>Magic Text: <code>{storage_external_total}</code></p> <p>Returns: Actual total capacity of external storage.</p> <p>Example: On a theoretical 256\u202fGB device, the real value might be: <code>221GB</code></p> <p>Simple explanation: This Magic Text tells you the total actual capacity of your device's external storage. Real capacity is usually less than the advertised size due to formatting and system use.</p>"},{"location":"magic_text/no_trigger/storage_total_internal/","title":"Storage total (internal)","text":"<p>Magic Text: <code>{storage_internal_total}</code></p> <p>Returns: Actual total capacity of internal storage.</p> <p>Example: On a theoretical 256\u202fGB device, the real value might be: <code>221GB</code></p> <p>Simple explanation: This Magic Text tells you how much total space your device's internal storage actually has. The number may be smaller than advertised due to system formatting and reserved space.</p>"},{"location":"magic_text/no_trigger/system_setting_global/","title":"System setting (global)","text":"<p>Returns: A value depending on the system setting being checked. Usually, it will return <code>1</code> (enabled) or <code>0</code> (disabled).</p> <p>Example: <code>1</code> (the option is enabled) <code>0</code> (the option is disabled)</p> <p>Simple explanation: This Magic Text lets you check certain internal Android system settings. For example, you can use it to find out whether a specific option is turned on or off. Just replace <code>your_setting_key_here</code> with the name of the setting you want to check (this is called a \"key\").</p> <p>\u26a0\ufe0f Important: Some system keys are sensitive. Changing them without knowing what they do can affect your device\u2019s functionality or security. Use this only to read values\u2014don\u2019t try to write or modify system settings unless you know exactly what you\u2019re doing.</p>"},{"location":"magic_text/no_trigger/system_setting_secure/","title":"System setting (secure)","text":"<p>Returns: A value depending on the secure system setting being checked. It can be a number, text, or package name.</p> <p>Example: If you use the key <code>assistant</code>, it might return something like: <code>com.google.android.googlequicksearchbox/com.google.android.voiceinteraction.GsaVoiceInteractionService</code> (This means Google Assistant is currently set as the default assistant.)</p> <p>Simple explanation: This Magic Text lets you read secure Android system settings. For example, some settings store which app is used for certain features, like the voice assistant. You just replace <code>your_setting_key_here</code> with the name of the setting you want to read.</p> <p>\u26a0\ufe0f Important: Secure settings control critical features of the system. Changing them without understanding their purpose can affect how your device works or compromise its security. Use this Magic Text only to read values\u2014do not modify secure settings unless you know exactly what you're doing.</p>"},{"location":"magic_text/no_trigger/system_setting_system/","title":"System setting (system)","text":"<p>Returns: A value based on the system setting being checked. For time format settings, it usually returns <code>12</code> or <code>24</code>.</p> <p>Example: If you use the key <code>time_12_24</code>, it might return: <code>12</code> \u2192 The device is using the 12-hour format <code>24</code> \u2192 The device is using the 24-hour format</p> <p>Simple explanation: This Magic Text allows you to check basic system preferences on the device. For example, the setting <code>time_12_24</code> tells you whether the device is using a 12-hour or 24-hour clock. You just replace <code>your_setting_key_here</code> with the setting you want to check.</p> <p>\u26a0\ufe0f Important: System settings control everyday behaviors of the device. While reading them is safe, changing certain values without knowing their effect might cause unexpected behavior. It\u2019s recommended to use this Magic Text only for reading values unless you\u2019re sure of what you're doing.</p>"},{"location":"magic_text/no_trigger/system_time/","title":"System time","text":"<p>Magic Text: <code>{system_time}</code></p> <p>Returns: A number that represents the current time on the device, in Unix time (seconds since January 1, 1970, UTC).</p> <p>Example: <code>1735689600</code> \u2192 This means it's exactly 00:00:00 (midnight) on January 1st, 2025 (UTC).</p> <p>Simple explanation: This Magic Text shows the current time as a big number called Unix time. It counts how many seconds have passed since a fixed point in time: January 1st, 1970, at midnight (UTC). It\u2019s commonly used by apps and systems to keep track of time.</p> <p>\u2139\ufe0f Note: This number is always increasing and can be converted into a normal date/time using online tools or scripts.</p>"},{"location":"magic_text/no_trigger/system_time_ms/","title":"System time (ms)","text":"<p>Magic Text: <code>{system_time_ms}</code></p> <p>Returns: Current system time as a Unix timestamp in milliseconds.</p> <p>Example: <code>1735689600000</code> \u2192 Represents <code>00:00:00:000</code> GMT on January 1st, 2025.</p> <p>Simple explanation: This Magic Text gives you the current time as a large number in milliseconds since January 1st, 1970 (UTC). It's just like <code>{system_time}</code>, but with three extra digits for milliseconds\u2014great when you need more precise timing.</p>"},{"location":"magic_text/no_trigger/variable_length_string/","title":"Variable Length (String)","text":"<p>Magic Text: <code>{strlen=my_var}</code></p> <p>Returns: The number of characters in the string stored in the variable <code>my_var</code>.</p> <p>Example: If <code>my_var = \"hello world\"</code>, the result will be <code>11</code>.</p> <p>Simple explanation: This Magic Text tells you how long a piece of text is\u2014counting all letters, numbers, spaces, and symbols in the variable.</p>"},{"location":"magic_text/no_trigger/variable_type/","title":"Variable Type","text":"<p>Magic Text: <code>{vtype=variable_name}</code></p> <p>Returns: A number indicating the data type of the specified variable.</p> <p>Values: - <code>0</code> \u2192 Boolean (true/false) - <code>1</code> \u2192 Integer (whole number) - <code>2</code> \u2192 String (text) - <code>3</code> \u2192 Decimal (number with decimals) - <code>4</code> \u2192 Dictionary (key-value pairs) - <code>5</code> \u2192 Array (ordered list of values)</p> <p>Simple explanation: This Magic Text tells you what kind of data a variable is storing. For example, if it returns <code>2</code>, it means the variable holds a text string.</p>"},{"location":"magic_text/no_trigger/webhook_base_url/","title":"Webhook Base URL","text":"<p>Magic Text: <code>{webhook_url}</code></p> <p>Returns: The base URL of your MacroDroid webhook.</p> <p>Example: <code>https://trigger.macrodroid.com/6a10aa17-75cd-4856-9d71-84281205a320/</code></p> <p>Simple explanation: This Magic Text gives you the base part of your webhook URL. You can add your custom webhook identifier at the end to complete it.</p> <p>\u2139\ufe0f Note: This is just the base URL. A full webhook URL looks like: <code>https://trigger.macrodroid.com/6a10aa17-75cd-4856-9d71-84281205a320/mywebhook</code></p> <p>Usage: Useful for building dynamic webhook URLs by appending the required identifier.</p>"},{"location":"magic_text/no_trigger/week_of_year/","title":"Week of Year","text":"<p>Magic Text: <code>{week_of_year}</code></p> <p>Returns: The current week number of the year as a whole number.</p> <p>Example: <code>1</code> \u2192 First week of the year <code>15</code> \u2192 Fifteenth week of the year</p> <p>Simple explanation: This Magic Text tells you which week of the year it currently is. The year is divided into weeks starting from the first week in January. It helps track time in weeks instead of days or months.</p> <p>\u2139\ufe0f Note: The exact week number can depend on local settings, but usually, the first week starts with January 1st.</p>"},{"location":"magic_text/no_trigger/wifi_signal_strength/","title":"Wifi Signal Strength","text":"<p>Magic Text: <code>{wifi_strength}</code></p> <p>Returns: A number representing the Wi-Fi signal strength in decibels (dBm). The value is usually negative.</p> <p>Example: <code>-60</code> \u2192 Stronger Wi-Fi signal <code>-70</code> \u2192 Weaker Wi-Fi signal</p> <p>Simple explanation: This Magic Text tells you how strong your Wi-Fi connection is. The number is negative, but the closer it is to zero, the better the signal. So, <code>-60</code> is a stronger signal than <code>-70</code>.</p> <p>\u2139\ufe0f Note: A stronger signal means better connection quality and faster speeds.</p>"},{"location":"magic_text/no_trigger/year/","title":"Year","text":"<p>Returns: The current year as a four-digit number.</p> <p>Magic Text: <code>{year}</code></p> <p>Example: <code>2025</code></p>"},{"location":"magic_text/trigger_required/","title":"\ud83e\uddea Requires a trigger to operate","text":""},{"location":"magic_text/trigger_required/#app-installremoveupdate","title":"App install/remove/update","text":""},{"location":"magic_text/trigger_required/#app-launchedclosed","title":"App Launched/Closed","text":""},{"location":"magic_text/trigger_required/#bluetooth-device-connected-or-device-disconnected","title":"Bluetooth (device connected or device disconnected)","text":""},{"location":"magic_text/trigger_required/#call-active-ended-incoming-missed-outgoing","title":"Call (active, ended, incoming, missed, outgoing)","text":""},{"location":"magic_text/trigger_required/#geofence","title":"Geofence","text":""},{"location":"magic_text/trigger_required/#logcat","title":"Logcat","text":""},{"location":"magic_text/trigger_required/#notifications","title":"Notifications","text":""},{"location":"magic_text/trigger_required/#popup-message-text","title":"Popup message text","text":""},{"location":"magic_text/trigger_required/#sms-received","title":"Sms received","text":""},{"location":"magic_text/trigger_required/#spotify","title":"Spotify","text":""},{"location":"magic_text/trigger_required/#system-settings","title":"System settings","text":""},{"location":"magic_text/trigger_required/#system-log-entry","title":"System log entry","text":""},{"location":"magic_text/trigger_required/#text-shared-to-macrodroid","title":"Text shared to macrodroid","text":""},{"location":"magic_text/trigger_required/#trigger-that-fired","title":"Trigger that fired","text":""},{"location":"magic_text/trigger_required/#ui-click","title":"Ui click","text":""},{"location":"magic_text/trigger_required/#usb-device-connected","title":"Usb device connected","text":""},{"location":"magic_text/trigger_required/app_install_remove_update/","title":"App install/remove/update","text":"<p>App Name <code>{app_name}</code> \u2013 Returns the name of the application that was launched. Example: <code>MacroDroid</code></p> <p>App Package <code>{app_package}</code> \u2013 Returns the package name of the application that was launched. Example: <code>com.arlosoft.macrodroid</code></p> <p>Requires: The macro must be triggered by a App install/remove/update trigger.</p>"},{"location":"magic_text/trigger_required/application_launched_closed/","title":"App Launched/Closed","text":"<p>App Name <code>{app_name}</code> \u2013 The name of the application that was launched or closed. Example: <code>MacroDroid</code></p> <p>App Package <code>{app_package}</code> \u2013 The package name of the application that was launched or closed. Example: <code>com.arlosoft.macrodroid</code></p> <p>Requires: The macro must be triggered by a App Launched/Closed trigger.</p>"},{"location":"magic_text/trigger_required/bluetooth/","title":"Bluetooth Device Connected/Disconnected","text":"<p>Bluetooth Device Name <code>{bluetooth_device_name}</code> \u2013 Returns the name of the Bluetooth device that was connected or disconnected. Example: <code>Headphones 1 Pro</code></p> <p>Requires: The macro must use the Bluetooth device connected or Bluetooth device disconnected trigger.</p>"},{"location":"magic_text/trigger_required/calendar_event/","title":"Calendar Event","text":"<p>Calendar Title <code>{calendar_title}</code> \u2013 Returns the title of the calendar event. Example: <code>Project Meeting</code></p> <p>Calendar Detail <code>{calendar_detail}</code> \u2013 Returns the details or description of the calendar event. Example: <code>Review deliverables and assign tasks.</code></p> <p>Calendar Location <code>{calendar_location}</code> \u2013 Returns the location where the event will take place. Example: <code>Conference Room 3B</code></p> <p>Calendar Start Date <code>{calendar_start_date}</code> \u2013 Returns the start date of the event in local format (usually DD/MM/YYYY). Example: <code>06/11/2025</code></p> <p>Calendar Start Date (US) <code>{calendar_start_date_us}</code> \u2013 Returns the start date of the event in US format (MM/DD/YYYY). Example: <code>11/06/2025</code></p> <p>Calendar Start Time <code>{calendar_start_time}</code> \u2013 Returns the start time of the event. Example: <code>3:30 PM</code></p> <p>Calendar End Date <code>{calendar_end_date}</code> \u2013 Returns the end date of the event in local format. Example: <code>06/11/2025</code></p> <p>Calendar End Date (US) <code>{calendar_end_date_us}</code> \u2013 Returns the end date of the event in US format. Example: <code>11/06/2025</code></p> <p>Calendar End Time <code>{calendar_end_time}</code> \u2013 Returns the end time of the event. Example: <code>5:00 PM</code></p> <p>Requires: The macro must be triggered by a Calendar Event trigger.</p>"},{"location":"magic_text/trigger_required/call/","title":"Call (Active, Ended, Incoming, Missed, Outgoing)","text":"<p>Call Groups <code>{call_groups}</code> \u2013 Returns the name(s) of the contact group(s) associated with the caller. If the contact belongs to multiple groups, all group names are returned separated by commas. Example: <code>Work colleagues, Friends</code></p> <p>Caller Name <code>{call_name}</code> \u2013 Returns the name of the caller if available in contacts. Example: <code>MacroDroid user</code></p> <p>Caller Number <code>{call_number}</code> \u2013 Returns the phone number from which the call was received. Example: <code>1234567890</code></p> <p>Requires: The macro must have a call-related trigger (Active, Ended, Incoming, Missed, or Outgoing call).</p>"},{"location":"magic_text/trigger_required/geofence/","title":"Geofence","text":"<p>Geofence Trigger |  Geofence Constraint</p> <p>Geofence Name <code>[geofence_zone_name]</code> - Returns the name of the geofence. Example: If the geofence is named \"Work Office\": <code>[geofence_zone_name]</code> = Work Office</p> <p>Geofence lat,lon <code>[geofence_lat_lon]</code> - Returns the latitude coordinate of the geofence's center point. Example: For a location in London: <code>[geofence_lat_lon]</code> = 51.5074,-0.1278</p> <p>Google map link <code>[geofence_location_link]</code> - Returns a clickable Google Maps link to the geofence's center point. Example: <code>[geofence_location_link]</code> = https://maps.google.com/?q=51.5074,-0.1278</p> <p>Requires: The macro must have a Geofence (location) trigger (entry or exit) or Geofence constraint to access these Magic Text variables.</p>"},{"location":"magic_text/trigger_required/logcat/","title":"Logcat","text":"<p>Logcat Message <code>{logcat}</code> \u2013 Returns the specific logcat entry line captured by the Logcat trigger in the macro. Example: <code>06-10 14:22:17.123 I/MyApp: Button clicked</code></p> <p>Requires: The macro must include the Logcat message trigger configured to capture logs.</p>"},{"location":"magic_text/trigger_required/notifications/","title":"Notifications","text":"<p>Notification Title <code>{not_title}</code> \u2013 The main, prominent title text summarizing the notification\u2019s purpose. Example: <code>New message from Josu\u00e9</code></p> <p>Ticker Text <code>{not_ticker}</code> \u2013 Brief scrolling text shown temporarily on the status bar (mostly obsolete since Android 5.0). Example: <code>Josu\u00e9: Hey, are you there?</code></p> <p>Notification Content <code>{notification}</code> \u2013 The main body text/content of the notification. Example: <code>Hey, I just wanted to check in.</code></p> <p>Subtext <code>{not_sub_text}</code> \u2013 Secondary text that adds extra context or detail. Example: <code>2 new messages</code></p> <p>Expanded Text Lines <code>{not_text_lines}</code> \u2013 Expanded text showing more content if the notification supports it. Example: <code>Hey, just checking in. Let me know when you're free.</code></p> <p>Action Button Names <code>{not_action_names}</code> \u2013 Names of action buttons inside the notification (like Reply, Mark as Read). Example: <code>Reply, Mark as Read</code></p> <p>Notification Timestamp <code>{not_timestamp}</code> \u2013 Unix timestamp in milliseconds indicating when the notification arrived. Example: <code>1735689600000</code></p> <p>App Name <code>{not_app_name}</code> \u2013 Name of the app that generated the notification. Example: <code>WhatsApp</code></p> <p>App Package <code>{not_app_package}</code> \u2013 Package name of the app that created the notification. Example: <code>com.whatsapp</code></p> <p>Notification Channel <code>{not_channel}</code> \u2013 Name of the notification channel through which this notification was sent. Example: <code>Messages</code></p> <p>Requires: The macro must include the Notification Received trigger.</p>"},{"location":"magic_text/trigger_required/popup_message_text/","title":"PopUp Message","text":"<p>Popup Message Text <code>{popup_message_text}</code> \u2013 Returns the full text content of the popup message. Example: <code>Low battery warning</code></p> <p>App Name <code>{app_name}</code> \u2013 Name of the app that generated the popup. Example: <code>Settings</code></p> <p>App Package <code>{app_package}</code> \u2013 Package name of the app that generated the popup. Example: <code>com.android.settings</code></p> <p>Requires: The macro must include the PopUp Message trigger.</p>"},{"location":"magic_text/trigger_required/sms_received/","title":"SMS Received","text":"<p>Sender Name <code>{sms_name}</code> \u2013 Name of the sender if the number exists in your contact list. Example: <code>MacroDroid user</code></p> <p>Message Content <code>{sms_message}</code> \u2013 The content of the SMS message. Example: <code>Hello, have a nice day</code></p> <p>Sender Number <code>{sms_number}</code> \u2013 Phone number of the sender. Example: <code>+1 1234567890</code></p> <p>SIM Card ID <code>{sms_sim_id}</code> \u2013 SIM card ID that received the SMS. Example: <code>4</code></p> <p>SIM Carrier Name <code>{sms_sim_name}</code> \u2013 Name of the mobile carrier associated with the SIM that received the SMS. Example: <code>Vodafone</code></p> <p>Requires: The macro must include the SMS Received trigger.</p>"},{"location":"magic_text/trigger_required/spotify/","title":"Spotify","text":"<p>Spotify Track ID <code>{spotify_track_id}</code> \u2013 Returns the unique ID of the currently playing track. Example: <code>3n3Ppam7vgaVa1iaRUc9Lp</code></p> <p>Spotify Artist <code>{spotify_artist}</code> \u2013 Returns the artist name of the currently playing track. Example: <code>The Weeknd</code></p> <p>Spotify Album <code>{spotify_album}</code> \u2013 Returns the album name of the currently playing track. Example: <code>After Hours</code></p> <p>Spotify Track Name <code>{spotify_track}</code> \u2013 Returns the name of the currently playing track. Example: <code>Blinding Lights</code></p> <p>Track Length (seconds) <code>{spotify_length_s}</code> \u2013 Returns the total length of the currently playing track in seconds. Example: <code>200</code></p> <p>Is Playing <code>{spotify_is_playing}</code> \u2013 Returns <code>true</code> if music is currently playing, <code>false</code> otherwise. Example: <code>true</code></p> <p>Requires: The macro must include the Spotify trigger and the Spotify app must be installed on the device.</p> <p>Possible Issues: - To ensure the Spotify trigger works, enable <code>Device Broadcast Status</code> in Spotify app settings. - Magic Texts won\u2019t work without the Spotify app installed and the Spotify trigger included in the macro.</p>"},{"location":"magic_text/trigger_required/system_log_entry/","title":"System Log Entry","text":"<p>System Log Entry <code>{system_log_entry}</code> \u2013 Returns the specific text that triggered the MacroDroid system log event. Example: Battery level critical</p> <p>Requires: The macro must use the System log entry trigger configured with the desired text to monitor.</p>"},{"location":"magic_text/trigger_required/system_settings/","title":"System Settings","text":"<p>Provides details when a system setting is changed on the device.</p>"},{"location":"magic_text/trigger_required/system_settings/#system_setting_category","title":"<code>{system_setting_category}</code>","text":"<p>Returns: The category of the changed setting key. Possible values: <code>Global</code>, <code>Secure</code>, or <code>System</code>.</p>"},{"location":"magic_text/trigger_required/system_settings/#system_setting_key","title":"<code>{system_setting_key}</code>","text":"<p>Returns: The name of the setting key that was changed. Example: <code>screen_brightness</code>, <code>airplane_mode_on</code></p>"},{"location":"magic_text/trigger_required/system_settings/#system_setting_value","title":"<code>{system_setting_value}</code>","text":"<p>Returns: The new value of the setting key. Example: <code>1</code> (for enabled), <code>0</code> (for disabled), or other values depending on the key.</p> <p>Requires: The macro must include the System Settings Change trigger.</p>"},{"location":"magic_text/trigger_required/text_shared_to_macrodroid/","title":"Text Shared to MacroDroid","text":"<p>Provides the shared text and its subject when another app shares content to MacroDroid (e.g., selecting text in another app and using Share &gt; MacroDroid).</p>"},{"location":"magic_text/trigger_required/text_shared_to_macrodroid/#shared_text","title":"<code>{shared_text}</code>","text":"<p>Returns: The body of the shared text. Example: <code>Check out this cool link: https://example.com</code></p>"},{"location":"magic_text/trigger_required/text_shared_to_macrodroid/#shared_text_subject","title":"<code>{shared_text_subject}</code>","text":"<p>Returns: The subject or title of the shared content, if provided. Example: <code>Interesting Article</code></p> <p>Requires: The macro must include the Text Shared to MacroDroid trigger.</p>"},{"location":"magic_text/trigger_required/trigger_that%20_fired/","title":"Trigger that fired","text":"<p>Magic Text: <code>{trigger_that_fired}</code></p> <p>Returns: The name of the trigger that activated the macro.</p> <p>Example: If the macro was triggered by an SMS received from any number with any content \u2192 returns <code>SMS from Any Number (Any Content)</code></p> <p>Simple explanation: Tells you which trigger caused the macro to run, shown as its full descriptive name.</p> <p>Requires: The macro must include the Trigger that fired trigger.</p>"},{"location":"magic_text/trigger_required/ui_click/","title":"UI Click","text":"<p>Provides access to the text that was clicked in the UI.</p>"},{"location":"magic_text/trigger_required/ui_click/#ui_click_text","title":"<code>{ui_click_text}</code>","text":"<p>Returns: The text of the clicked UI element. Useful when the clicked text may vary, such as dynamic content or when using regular expressions. Example: If the clicked button says <code>Confirm</code>, the result will be <code>Confirm</code>.</p> <p>Requires: The macro must include the UI Click trigger.</p>"},{"location":"magic_text/trigger_required/usb_device_connected/","title":"USB Device Connected","text":"<p>These magic text values are available when a USB device is connected.</p>"},{"location":"magic_text/trigger_required/usb_device_connected/#usb_product_name","title":"<code>{usb_product_name}</code>","text":"<p>Returns: The name of the connected USB device. Example: <code>SanDisk Ultra USB 3.0</code></p>"},{"location":"magic_text/trigger_required/usb_device_connected/#usb_manufacturer_name","title":"<code>{usb_manufacturer_name}</code>","text":"<p>Returns: The manufacturer of the connected USB device. Example: <code>SanDisk</code></p>"},{"location":"magic_text/trigger_required/usb_device_connected/#usb_device_hash","title":"<code>{usb_device_hash}</code>","text":"<p>Returns: A unique identifier (hash code) generated for the connected USB device. Useful for identifying and differentiating USB devices. Note: This hash may vary depending on the port or device state.</p> <p>Requires: The macro must include the USB Device Connected/Disconnected trigger.</p>"},{"location":"magic_text/trigger_required/weather/","title":"Weather","text":"<p>Magic Text: <code>{weather_temperature_c}</code> Returns: Current temperature in degrees Celsius. Example: Returns <code>22</code> if the temperature is 22\u00b0C Simple explanation: Shows the current temperature in \u00b0C.</p> <p>Magic Text: <code>{weather_temperature_fahrenheit}</code> Returns: Current temperature in degrees Fahrenheit. Example: Returns <code>71.6</code> if the temperature is 71.6\u00b0F Simple explanation: Shows the current temperature in \u00b0F.</p> <p>Magic Text: <code>{weather_wind_speed}</code> Returns: Current wind speed in meters per second (m/s). Example: Returns <code>3.5</code> if wind speed is 3.5 m/s Simple explanation: Shows how fast the wind is blowing in m/s.</p> <p>Magic Text: <code>{weather_wind_speed_mph}</code> Returns: Current wind speed in miles per hour (mph). Example: Returns <code>7.8</code> if wind speed is 7.8 mph Simple explanation: Wind speed shown in mph.</p> <p>Magic Text: <code>{weather_wind_speed_kmh}</code> Returns: Current wind speed in kilometers per hour (km/h). Example: Returns <code>12.6</code> if wind speed is 12.6 km/h Simple explanation: Wind speed shown in km/h.</p> <p>Magic Text: <code>{weather_wind_direction}</code> Returns: Wind direction in degrees (0\u2013360). Example: Returns <code>270</code> if the wind is coming from the west Simple explanation: Shows wind direction as an angle (e.g., 90 = east).</p> <p>Magic Text: <code>{weather_humidity}</code> Returns: Current humidity percentage. Example: Returns <code>60</code> if the humidity is 60% Simple explanation: Shows how humid the air is right now.</p> <p>Magic Text: <code>{weather_conditions}</code> Returns: Text description of the current weather conditions (e.g., \"clear sky\", \"rain\", \"overcast\"). Example: Returns <code>clear sky</code> Simple explanation: Describes the weather in plain words.</p> <p>Requires: You must use the Weather trigger before accessing these Magic Texts.</p>"},{"location":"stopwatches/","title":"Stopwatches in MacroDroid","text":"<p>Description: Stopwatches let you track elapsed time within your macros. Ideal for measuring durations between events, delaying actions, or implementing custom time-based logic with precision.</p> <p>Where to find it: Stopwatches are managed from the Stopwatch tile on the main MacroDroid screen. From there, you can: - Create new stopwatches - Rename existing ones - Delete those no longer needed - Start/Stop them manually at any time  </p> <p>Usage in Macros: Stopwatches can be integrated into macros across multiple contexts:</p> <ul> <li> <p>Trigger   Start a macro when a stopwatch meets a time condition. Stopwatch trigger </p> </li> <li> <p>Action   Start, stop, reset stopwatch. Stopwatch action</p> </li> <li> <p>Constraint/Condition   Control macro execution depending on elapsed time. Stopwatch constraint</p> </li> <li> <p>Magic Text   Dynamically insert the current stopwatch time into text-based fields. Magic Text stopwatch</p> </li> </ul> <p>Common Use Cases: - Wait until a specific amount of time has passed - Delay or throttle macro execution intelligently - Track time between events (e.g., between button presses) - Log how long an operation takes or display it in a notification</p> <p>Simple explanation: Stopwatches are like custom timers you can start and stop at will. You control when the clock begins and ends, and MacroDroid gives you full access to that value anywhere in your automation logic.</p> <p>Video Guide: </p>"},{"location":"triggers/","title":"Introduction to Triggers in MacroDroid","text":"<p>Triggers are the core of every MacroDroid automation. They are events that your device can detect\u2014like plugging in the charger, receiving a notification, or unlocking the screen\u2014that tell MacroDroid when to run your macro. Without at least one trigger, your macro will never start.</p> <p>If you're just starting with MacroDroid, think of triggers as the \"WHEN\" part of your automation: \u201cWhen this happens do that.\u201d</p> <p>Go to trigger list</p>"},{"location":"triggers/#what-is-a-trigger","title":"What Is a Trigger?","text":"<p>A trigger is an event your device listens for. When that event happens, and the macro is enabled, the actions you defined will run. Every macro must have at least one trigger.</p> <p>Example: Trigger: <code>Charger Connected</code> Actions: <code>Turn On Wi-Fi</code>, <code>Show Notification: Charging Started</code></p>"},{"location":"triggers/#can-i-use-multiple-triggers","title":"Can I Use Multiple Triggers?","text":"<p>Yes. You can add several triggers to a single macro. If any one of them happens, the macro will run.</p> <p>Important: Triggers cannot be combined using AND logic (like \u201cCharger Connected AND Headphones Plugged\u201d) because they are instant events. Only one of them can start the macro at a time.</p> <p>Workaround: Use constraints to control when a trigger is allowed to run.</p> <p>Example: Trigger: <code>Charger Connected</code> Constraint: <code>Time of Day: 8:00 AM \u2013 10:00 PM</code> Macro only runs during those hours.</p>"},{"location":"triggers/#examples-of-useful-triggers","title":"Examples of Useful Triggers","text":"<p>Some common triggers include: - Battery: <code>Battery Level Drops Below 20%</code> - Device State: <code>Screen On/Off</code>, <code>Charger Connected</code> - Time: <code>Specific Time</code>, <code>Regular Interval (every X minutes)</code> - Connectivity: <code>Wi-Fi Connected</code>, <code>Bluetooth Device Connected</code> - Location: <code>Enter/Exit Location</code> - Notifications: <code>Notification Received from App</code> </p>"},{"location":"triggers/#why-are-triggers-important","title":"Why Are Triggers Important?","text":"<ul> <li>They define when your automation starts.  </li> <li>They give you flexibility to make your macro respond to different events.  </li> <li>With constraints, you can add precision to avoid unwanted triggers.</li> </ul> <p>Example: Goal: Save battery when low and not charging. - Trigger 1: <code>Battery Level Below 20%</code> - Trigger 2: <code>Screen On</code> - Constraint (on Trigger 2): <code>Not Charging</code> Actions: <code>Lower Brightness</code>, <code>Show Notification: Low Battery!</code></p> <p>Triggers are the starting point of every macro. Mastering them is key to building powerful automations in MacroDroid. Start small, experiment, and you\u2019ll quickly see what\u2019s possible.</p>"},{"location":"triggers/accessibility_service_state/","title":"Accessibility Service Changed","text":"<p>Description: </p> <p>This trigger fires when an accessibility service is enabled or disabled. It can be configured to monitor one or more specific applications.</p> <p>Example: </p> <p>Trigger an alert when the accessibility service is disabled to remind the user to configure settings.</p>"},{"location":"triggers/activity_recognition/","title":"Activity Recognition","text":"<p>Description: Activates when your device detects a specific physical activity such as driving, cycling, running, walking, or standing still.</p> <p>Configuration: - Activity type: Select from <code>In Vehicle</code>, <code>On Bicycle</code>, <code>Running</code>, <code>Walking</code>, or <code>Still</code>. - Confidence value (0\u2013100): Determines the detection threshold.   - Lower values trigger more often but might be inaccurate.   - Higher values are more precise but may miss some detections.</p> <p>Requires: Google Play Services must be installed and up to date.</p> <p>Example: Trigger when the user starts running with at least 80% confidence.</p> <p>Example 2: When activity is detected as <code>In Vehicle</code> with 90% confidence, automatically enable Do Not Disturb mode \u2014 restricted to trigger only between 7 AM and 10 PM.</p>"},{"location":"triggers/airplane_mode/","title":"Airplane Mode Changed","text":"<p>Description: Activates when airplane mode is turned on or off.</p> <p>Example: Trigger when airplane mode is turned off to automatically re-enable Wi-Fi and Bluetooth.</p>"},{"location":"triggers/app_activity_launched/","title":"App Activity Launched/Closed","text":"<p>Description: This trigger fires when a specific app activity is launched or closed. You can choose to activate it on open or close events.</p> <p>Configuration: - Activation type:   Choose whether to trigger on activity launch or close.</p> <ul> <li>Activity name matching options: </li> <li> <p>Matches:     Exact match of the activity name. Example: <code>com.example.MainActivity</code> matches only that exact activity.</p> </li> <li> <p>Contains:     Triggers if the activity name contains the specified text anywhere. Example: <code>Settings</code> matches <code>com.android.SettingsActivity</code> or <code>SettingsFragment</code>.</p> </li> <li> <p>Wildcards support: </p> </li> <li><code>*</code> matches any sequence of characters.  </li> <li> <p><code>?</code> matches any single character. Examples: </p> <ul> <li><code>com.example.*</code> matches all activities starting with <code>com.example.</code> </li> <li><code>MainAct?vity</code> matches <code>MainActivity</code> and <code>MainActXvity</code>.</li> </ul> </li> <li> <p>Regular expressions:   Enable with \"Enable regular expression matching\" option.   Use regex patterns for more flexible matching. Example: <code>com\\.example\\.(Main|Settings)Activity</code> matches either <code>com.example.MainActivity</code> or <code>com.example.SettingsActivity</code>.</p> </li> <li> <p>Case insensitive:   Optionally ignore case differences when matching. Example: <code>settings</code> matches <code>SettingsActivity</code> or <code>settingsactivity</code>.</p> </li> </ul> <p>Example: Trigger when <code>com.example.MainActivity</code> is launched to start a timer.</p>"},{"location":"triggers/application_installed_removed/","title":"App Install/Remove/Update","text":"<p>Description: This trigger activates when an app is installed, removed, or updated on your device. You can choose to trigger for any app or select one or more specific apps from a list.</p> <p>Configuration: - App selection:   Choose to trigger on any app or select Select Application(s).</p> <ul> <li>Event type:   Select which event(s) to monitor: Install, Remove, and/or Update.</li> </ul> <p>Magic Text: This trigger supports Magic Text variables to use app-related info in actions. App install/remove/update</p> <p>Example: Trigger a notification when WhatsApp is updated.</p>"},{"location":"triggers/application_launched/","title":"Application Launched/Closed","text":"<p>Description: This trigger fires when an application is opened (launched) or closed. You can target one or more specific apps using the app list or define the target by package name.</p> <p>Configuration: - App selection:   - Select one or more apps from the list,   - Or enter the package name manually. Example: <code>com.instagram.android</code> refers to the Instagram app.</p> <p>Choose whether to trigger when the app is launched or closed.</p> <ul> <li>Force legacy mechanism: </li> <li>If enabled, MacroDroid will use an older detection method.  </li> <li> <p>Useful if the new implementation doesn\u2019t work on your device or you don\u2019t want to grant Accessibility access. Example: On older Android versions or restricted OEMs (e.g., Xiaomi/MIUI), the default method might not detect launches correctly. Enabling legacy mode may fix this.</p> </li> <li> <p>Magic Text:   You can insert Magic Text using the <code>...</code> button when defining the package name. App Launched/Closed</p> </li> </ul> <p>Example: Trigger when <code>com.spotify.music</code> is launched to increase media volume.</p>"},{"location":"triggers/autorotate/","title":"Auto Rotate Changed","text":"<p>Description: This trigger activates when the system's auto-rotate setting is turned enabled or disabled.</p> <p>Configuration: - State:   Choose between <code>Enabled</code> or <code>Disabled</code> to determine when the trigger should fire.</p> <p>Example: Trigger a toast message when auto-rotate is disabled.</p>"},{"location":"triggers/autosync/","title":"Autosync Changed","text":"<p>Description: This trigger activates when the system-wide auto-sync setting is turned enabled or disabled.</p> <p>Configuration: - State:   Choose between <code>Enabled</code> or <code>Disabled</code> to determine when the trigger should activate.</p> <p>Example: Trigger a notification when auto-sync is enabled to inform that data will now sync in the background.</p>"},{"location":"triggers/battery_level/","title":"Battery Level","text":"<p>Description: This trigger activates based on changes in the battery level. You can choose whether to trigger when the level increases, decreases, or changes in any direction.</p> <p>Configuration: </p> <p>Trigger type: - <code>Decrease to:</code> Fires when battery drops to the specified percentage. - <code>Increase to:</code> Fires when battery rises to the specified percentage. - <code>Any change:</code> Fires on any battery level change.</p> <p>Example: Trigger low-power mode when battery decreases to 20%.</p> <p>Magic Text: Current battery </p> <p>Battery temperature c </p> <p>Battery current now mA </p> <p>Note</p> <p>These Magic Text variables are available globally, even if this trigger is not used.</p>"},{"location":"triggers/battery_saver/","title":"Battery Saver State","text":"<p>Description: This trigger activates when the system's battery saver mode is turned on (enabled) or off (disabled).</p> <p>Configuration: </p> <p>State: - <code>Enabled:</code> Fires when battery saver is turned on. - <code>Disabled:</code> Fires when battery saver is turned off.</p> <p>Example: Activate dark mode when battery saver is enabled.</p> <p>Magic Text: Current battery </p> <p>Battery temperature c </p> <p>Battery current now mA </p> <p>Note</p> <p>These Magic Text variables are available globally, even if this trigger is not used.</p>"},{"location":"triggers/battery_temp/","title":"Battery Temperature","text":"<p>Description: This trigger activates based on changes in the battery temperature. You can choose whether to trigger when the temperature increases, decreases, or changes in any direction.</p> <p>Configuration: </p> <p>Trigger type: - <code>Decrease to:</code> Fires when battery temperature drops to the specified value (\u00b0C). - <code>Increase to:</code> Fires when battery temperature rises to the specified value (\u00b0C). - <code>Any change:</code> Fires on any change in battery temperature.</p> <p>Example: Trigger a cooling alert when battery temperature increases to 45\u00b0C.</p> <p>Magic Text: Current battery </p> <p>Battery temperature c </p> <p>Battery current now mA </p> <p>Note</p> <p>These Magic Text variables are available globally, even if this trigger is not used.</p> <p>Simple explanation: Fires when your device\u2019s battery temperature reaches a specific point or changes, allowing you to take action before overheating becomes a problem.</p>"},{"location":"triggers/bluetooth/","title":"Bluetooth Event","text":"<p>Description: This trigger activates based on changes in your device's Bluetooth status or when a Bluetooth device connects or disconnects.</p> <p>Configuration: </p> <p>Event type: - <code>Bluetooth enabled:</code> Fires when Bluetooth is turned on. - <code>Bluetooth disabled:</code> Fires when Bluetooth is turned off. - <code>Device connected:</code> Fires when a Bluetooth device connects. - <code>Device disconnected:</code> Fires when a Bluetooth device disconnects.</p> <p>Device selection (for connected/disconnected): You can choose <code>Any device</code> or select a specific previously paired device from the list.</p> <p>Example: Launch the music app when your car\u2019s Bluetooth connects.</p> <p>Magic Text: Bluetooth </p> <p>Note</p> <p>Magic Text values are available when using the <code>Device connected</code> or <code>Device disconnected</code> options.</p>"},{"location":"triggers/bluetooth_beacon/","title":"Bluetooth Beacon","text":"<p>Description: This trigger activates when a specified Bluetooth beacon comes into range or goes out of range of your device.</p> <p>Configuration: </p> <p>Trigger type: - <code>Beacon in range:</code> Fires when the selected beacon is detected nearby. - <code>Beacon out of range:</code> Fires when the selected beacon is no longer detected.</p> <p>Beacon selection: - Beacons can be detected automatically by scanning. - If a beacon is not found during scan, it can be added manually by entering its <code>Beacon UUID</code> and a <code>Beacon name</code>.</p> <p>Example: Start a timer when a specific beacon comes into range (e.g., entering the car).</p>"},{"location":"triggers/boot/","title":"Device Boot","text":"<p>Description: This trigger activates when the device finishes booting and the user unlocks the device for the first time after startup.</p> <p>Example: Turn on Wi-Fi automatically after the device restarts and is unlocked.</p>"},{"location":"triggers/calendar/","title":"Calendar Event","text":"<p>Description: This trigger activates when a calendar event starts or ends. You can customize it to respond only to certain events, calendars, or event details.</p> <p>Configuration: </p> <p>Trigger time: - Choose whether the trigger fires when an event starts or ends.</p> <p>Calendar account: - Select which calendar to monitor. Examples:   - Local device calendar   - Specific email calendar like <code>mymail@example.com</code>   - Special calendars like <code>Holidays in Mexico</code> or <code>Family</code></p> <p>Availability filter: - Filters events based on their status:   - <code>Free:</code> Events where you are marked as free (no busy status)   - <code>Busy:</code> Events where you are marked as busy (e.g., meetings)   - <code>Any:</code> All events regardless of availability</p> <p>Event matching by title or details: - Limit triggering to events whose title or details match certain patterns.   - Wildcards:     - <code>*</code> matches any number of characters     - <code>?</code> matches exactly one character     - Examples:       - <code>Meeting*</code> matches <code>Meeting with John</code> or <code>Meeting123</code>       - <code>Lunch?</code> matches <code>Lunch1</code> but not <code>Lunch12</code>   - Regular Expressions (regex):     - Enable with the option \"Enable regular expression matching\".     - Example:       - <code>^Call\\s\\d{3}$</code> matches exactly <code>Call 123</code> but not <code>Call1234</code> or <code>Call 12</code>   - Case insensitive:     - Matching ignores uppercase/lowercase differences.     - So <code>meeting</code> matches <code>Meeting</code> and <code>MEETING</code>.</p> <p>Ignore all-day events: - Skip events that last all day, often reminders or holidays.</p> <p>Use alarm: - Use this option if your trigger time is not firing accurately. - Android uses calendar alarms for better precision in triggering events.</p> <p>Check in advance: - Set how early or late the trigger fires relative to the event time.   - Positive values mean trigger before the event.   - Negative values mean trigger after the event.   - Examples:     - Trigger 15 minutes before a meeting: <code>0 days, 0 hours, 15 minutes</code>     - Trigger 10 minutes after event ends: <code>0 days, 0 hours, -10 minutes</code></p> <p>Example: Trigger a reminder 10 minutes before any busy event with a title starting with <code>Doctor</code> (e.g., <code>Doctor appointment</code>) in your <code>mymail@example.com</code> calendar.</p> <p>Magic Text: Calendar event details</p>"},{"location":"triggers/call_active/","title":"Call active","text":"<p>Description: Triggered when a phone call becomes active (i.e., when the call is answered). You can filter the trigger by contact(s), group(s), or number(s), with advanced matching options.</p> <p>Configuration: - Any number:   Triggers on any incoming number, regardless of contact or pattern.</p> <ul> <li>Select Contact(s):   Choose how to match callers based on your contact list. Modes include:  </li> <li><code>Any contact</code> \u2013 triggers for all saved contacts.  </li> <li><code>Non contact</code> \u2013 triggers only for numbers not saved in contacts.  </li> <li><code>Unknown caller</code> \u2013 triggers if the caller ID is hidden.  </li> <li> <p>You can also select specific contacts and choose to Include or Exclude them.  </p> </li> <li> <p>Select Group(s):   Lets you include or exclude contact groups like:  </p> </li> <li><code>My Contacts</code>, <code>Starred in Android</code>, <code>Family</code>, <code>Coworkers</code>, or custom groups like <code>Friends DND</code>.  </li> <li> <p>Works similarly to contact filtering with include/exclude logic.  </p> </li> <li> <p>Select Number:   Match based on number patterns:</p> </li> <li>Excludes checkbox \u2013 inverts the logic (i.e., do not trigger for matching numbers).  </li> <li>Wildcards:  <ul> <li><code>*</code> matches any sequence of characters.   Example: <code>+52*</code> matches any number starting with <code>+52</code>.  </li> <li><code>?</code> matches a single character.   Example: <code>555?1234</code> matches <code>55501234</code>, <code>55511234</code>, etc.  </li> </ul> </li> <li>Regular expression (enable \u201cEnable regular expression matching\u201d):    <ul> <li><code>^\\+52\\d{10}$</code> matches a 10-digit number starting with +52.  </li> <li><code>^555.*</code> matches any number starting with <code>555</code>.  </li> </ul> </li> </ul> <p>Magic Text: Call active</p> <p>Example: - A call from a number not in contacts and matching <code>*999</code> will trigger if the number ends in <code>999</code>. - A call from someone in the <code>Family</code> group can be excluded by setting the group to Exclude. - The pattern <code>+1?00*</code> matches <code>+12001234</code>, <code>+13004567</code>, etc.  </p> <p>Simple explanation: Fires when you're on an active call, with flexible filters based on who\u2019s calling and from what number. You can use groups, wildcards, or even regex for detailed control.</p>"},{"location":"triggers/call_ended/","title":"Call ended","text":"<p>Description: Triggered when a phone call ends (i.e., when the call is disconnected). You can filter the trigger by contact(s), group(s), or number(s), with advanced matching options.</p> <p>Configuration: - Any number:   Triggers on any number, regardless of whether it's saved or not.</p> <ul> <li>Select Contact(s):   Choose how to match callers based on your contact list. Modes include:  </li> <li><code>Any contact</code> \u2013 triggers for all saved contacts.  </li> <li><code>Non contact</code> \u2013 triggers only for numbers not saved in contacts.  </li> <li><code>Unknown caller</code> \u2013 triggers if the caller ID is hidden.  </li> <li> <p>You can also select specific contacts and choose to Include or Exclude them.  </p> </li> <li> <p>Select Group(s):   Lets you include or exclude contact groups like:  </p> </li> <li><code>My Contacts</code>, <code>Starred in Android</code>, <code>Family</code>, <code>Coworkers</code>, or custom groups like <code>Friends DND</code>.  </li> <li> <p>Works similarly to contact filtering with include/exclude logic.  </p> </li> <li> <p>Select Number:   Match based on number patterns:</p> </li> <li>Excludes checkbox \u2013 inverts the logic (i.e., do not trigger for matching numbers).  </li> <li>Wildcards:  <ul> <li><code>*</code> matches any sequence of characters.   Example: <code>+52*</code> matches any number starting with <code>+52</code>.  </li> <li><code>?</code> matches a single character.   Example: <code>555?1234</code> matches <code>55501234</code>, <code>55511234</code>, etc.  </li> </ul> </li> <li>Regular expression (enable \u201cEnable regular expression matching\u201d):    <ul> <li><code>^\\+52\\d{10}$</code> matches a 10-digit number starting with +52.  </li> <li><code>^555.*</code> matches any number starting with <code>555</code>.  </li> </ul> </li> </ul> <p>Magic Text: Call ended</p> <p>Example: - A call from a number in the <code>Coworkers</code> group ends, and you have selected that group \u2013 the trigger will fire. - A call ending from a number matching the pattern <code>*999</code> will trigger if the number ends in <code>999</code>. - The pattern <code>^+1[0-9]{9}$</code> will match any 10-digit US number starting with <code>+1</code>.</p> <p>Simple explanation: Fires when a call ends, with the same filtering power as Call active \u2014 great for logging calls, triggering post-call actions, or handling specific contacts.</p>"},{"location":"triggers/call_incoming/","title":"Call incoming","text":"<p>Description: Triggered when there is an incoming call (i.e., the phone is ringing). You can filter the trigger by contact(s), group(s), or number(s), with advanced matching options.</p> <p>Configuration: - Any number:   Triggers on any incoming call, regardless of whether the number is saved or not.</p> <ul> <li>Select Contact(s):   Choose how to match incoming callers based on your contact list. Modes include:  </li> <li><code>Any contact</code> \u2013 triggers for all saved contacts.  </li> <li><code>Non contact</code> \u2013 triggers only for numbers not saved in contacts.  </li> <li><code>Unknown caller</code> \u2013 triggers if the caller ID is hidden.  </li> <li> <p>You can also select specific contacts and choose to Include or Exclude them.  </p> </li> <li> <p>Select Group(s):   Lets you include or exclude contact groups like:  </p> </li> <li><code>My Contacts</code>, <code>Starred in Android</code>, <code>Family</code>, <code>Coworkers</code>, or custom groups like <code>Friends DND</code>.  </li> <li> <p>Works similarly to contact filtering with include/exclude logic.  </p> </li> <li> <p>Select Number:   Match based on number patterns:</p> </li> <li>Excludes checkbox \u2013 inverts the logic (i.e., do not trigger for matching numbers).  </li> <li>Wildcards:  <ul> <li><code>*</code> matches any sequence of characters.   Example: <code>+52*</code> matches any number starting with <code>+52</code>.  </li> <li><code>?</code> matches a single character.   Example: <code>555?1234</code> matches <code>55501234</code>, <code>55511234</code>, etc.  </li> </ul> </li> <li>Regular expression (enable \u201cEnable regular expression matching\u201d):    <ul> <li><code>^\\+52\\d{10}$</code> matches a 10-digit number starting with +52.  </li> <li><code>^555.*</code> matches any number starting with <code>555</code>.  </li> </ul> </li> </ul> <p>Magic Text: Call incoming</p> <p>Example: - An incoming call from any number triggers if \u201cAny number\u201d is selected. - Calls from the group <code>Coworkers</code> can be included or excluded to control triggering. - The wildcard pattern <code>+1?00*</code> matches numbers like <code>+12001234</code> or <code>+13004567</code>.</p> <p>Simple explanation: Fires as soon as the phone rings, letting you filter incoming calls by contacts, groups, or number patterns \u2014 perfect for automated responses or notifications.</p>"},{"location":"triggers/call_missed/","title":"Call missed","text":"<p>Description: Triggered when you miss an incoming call (i.e., the call rings but is not answered). You can filter the trigger by contact(s), group(s), or number(s), with advanced matching options.</p> <p>Configuration: - Any number:   Triggers on any missed call, regardless of whether the number is saved or not.</p> <ul> <li>Select Contact(s):   Choose how to match missed callers based on your contact list. Modes include:  </li> <li><code>Any contact</code> \u2013 triggers for all saved contacts.  </li> <li><code>Non contact</code> \u2013 triggers only for numbers not saved in contacts.  </li> <li><code>Unknown caller</code> \u2013 triggers if the caller ID is hidden.  </li> <li> <p>You can also select specific contacts and choose to Include or Exclude them.  </p> </li> <li> <p>Select Group(s):   Lets you include or exclude contact groups like:  </p> </li> <li><code>My Contacts</code>, <code>Starred in Android</code>, <code>Family</code>, <code>Coworkers</code>, or custom groups like <code>Friends DND</code>.  </li> <li> <p>Works similarly to contact filtering with include/exclude logic.  </p> </li> <li> <p>Select Number:   Match based on number patterns:</p> </li> <li>Excludes checkbox \u2013 inverts the logic (i.e., do not trigger for matching numbers).  </li> <li>Wildcards:  <ul> <li><code>*</code> matches any sequence of characters.   Example: <code>+52*</code> matches any number starting with <code>+52</code>.  </li> <li><code>?</code> matches a single character.   Example: <code>555?1234</code> matches <code>55501234</code>, <code>55511234</code>, etc.  </li> </ul> </li> <li>Regular expression (enable \u201cEnable regular expression matching\u201d):    <ul> <li><code>^\\+52\\d{10}$</code> matches a 10-digit number starting with +52.  </li> <li><code>^555.*</code> matches any number starting with <code>555</code>.  </li> </ul> </li> </ul> <p>Magic Text: Call missed</p> <p>Example: - A missed call from a number ending in <code>123</code> matches the wildcard <code>*123</code>. - If you exclude the <code>Family</code> group and your mom calls but you miss it, the trigger won't fire. - The regex <code>^+44\\d+</code> will match any UK number starting with <code>+44</code>.</p> <p>Simple explanation: Fires when you miss a call, letting you act on it using contact, group, number patterns, or even regular expressions for fine-grained control.</p>"},{"location":"triggers/call_outgoing/","title":"Call outgoing","text":"<p>Description: Triggered when an outgoing call is initiated (i.e., when you start dialing). You can filter the trigger by contact(s), group(s), or number(s), with advanced matching options.</p> <p>Configuration: - Any number:   Triggers on any outgoing call, regardless of whether the number is saved or not.</p> <ul> <li>Select Contact(s):   Choose how to match called contacts based on your contact list. Modes include:  </li> <li><code>Any contact</code> \u2013 triggers for all saved contacts.  </li> <li><code>Non contact</code> \u2013 triggers only for numbers not saved in contacts.  </li> <li><code>Unknown caller</code> \u2013 triggers if the number is hidden or private.  </li> <li> <p>You can also select specific contacts and choose to Include or Exclude them.  </p> </li> <li> <p>Select Group(s):   Lets you include or exclude contact groups like:  </p> </li> <li><code>My Contacts</code>, <code>Starred in Android</code>, <code>Family</code>, <code>Coworkers</code>, or custom groups like <code>Friends DND</code>.  </li> <li> <p>Works similarly to contact filtering with include/exclude logic.  </p> </li> <li> <p>Select Number:   Match based on number patterns:</p> </li> <li>Excludes checkbox \u2013 inverts the logic (i.e., do not trigger for matching numbers).  </li> <li>Wildcards:  <ul> <li><code>*</code> matches any sequence of characters.   Example: <code>+52*</code> matches any number starting with <code>+52</code>.  </li> <li><code>?</code> matches a single character.   Example: <code>555?1234</code> matches <code>55501234</code>, <code>55511234</code>, etc.  </li> </ul> </li> <li>Regular expression (enable \u201cEnable regular expression matching\u201d):    <ul> <li><code>^\\+52\\d{10}$</code> matches a 10-digit number starting with +52.  </li> <li><code>^555.*</code> matches any number starting with <code>555</code>.  </li> </ul> </li> </ul> <p>Magic Text: Call outgoing</p> <p>Example: - An outgoing call to any number triggers if \u201cAny number\u201d is selected. - Calling someone in the <code>Family</code> group can be included or excluded to filter triggers. - The wildcard pattern <code>+1?00*</code> matches outgoing numbers like <code>+12001234</code> or <code>+13004567</code>.</p> <p>Simple explanation: Fires right when you start an outgoing call, letting you filter by contact, group, or number pattern \u2014 useful for automations like logging or special notifications.</p>"},{"location":"triggers/cell_tower/","title":"Cell Tower","text":"<p>Description: This trigger activates when your device detects entry to or exit from a group of cell towers you've previously saved. It\u2019s a low-accuracy location method based on mobile signal coverage, not GPS. Ideal for detecting when you're in or out of a large area (like a city or neighborhood).</p> <p>Configuration: - Cell Tower Group:   Choose a previously created group of cell towers that represents a specific area.</p> <ul> <li><code>Enter cell area</code>: Fires when at least one cell tower from the selected group is detected.  </li> <li><code>Leave cell area</code>: Fires when none of the towers from the selected group are currently detected.</li> </ul> <p>Tip</p> <p>To create a cell tower group, go to: <code>Triggers Cell Tower &gt; + &gt; Scan Cell Towers</code></p> <p>Simple explanation: Fires when your phone connects to or disconnects from cell towers you\u2019ve saved as part of a group. It\u2019s like a GPS-free location check\u2014good for large areas, but not precise.</p>"},{"location":"triggers/clipboard_change/","title":"Clipboard Change","text":"<p>Description: </p> <p>This trigger fires whenever the text content in your device\u2019s clipboard changes. Useful for automations that respond to copied text (e.g., auto-translate, store logs, or trigger actions when specific content is copied).  </p> <p>Important</p> <p>On Android 10 and above, Google restricts clipboard access for background apps. MacroDroid uses a workaround called ADB Logcat Hack to detect changes indirectly.</p> <p>Configuration: </p> <p>Case insensitive: - When enabled, <code>hello</code>, <code>HELLO</code>, and <code>HeLLo</code> are treated as the same.  </p> <p>Use regular expression matching (regex): - Lets you match complex patterns within the clipboard text using regex syntax. - Examples:   - <code>https?://.*</code> Matches any link that starts with http:// or https://   - <code>\\d{3}-\\d{2}-\\d{4}</code> Matches a pattern like a US Social Security number (e.g., <code>123-45-6789</code>)   - <code>.*@.*\\..*</code> Matches email addresses (e.g., <code>user@example.com</code>)  </p> <p>Use wildcard matching: - Simpler alternative to regex using <code>*</code> and <code>?</code>:   - <code>*password*</code> Matches anything containing the word \u201cpassword\u201d   - <code>file_??.txt</code> Matches files like <code>file_01.txt</code>, <code>file_A1.txt</code>, etc.  </p> <p>Use logcat (ADB Hack): - Enables clipboard detection on Android 10+ using the device\u2019s log output. - \u26a0\ufe0f Requires ADB setup or rooted device with Magisk module.  </p> <p>How to enable ADB (Logcat) </p> <p>Magic Text: You can access the clipboard content using: Clipboard text </p> <p>Example: Trigger a macro when the clipboard contains a URL (<code>https://...</code>) and send it to your PC.  </p> <p>Simple explanation: This trigger activates when you copy something new. You can make it react only to specific content using keywords, patterns (regex), or wildcards\u2014even on Android 10+ with a workaround.  </p>"},{"location":"triggers/dark_theme/","title":"Dark Theme","text":"<p>Description: This trigger activates when the system-wide dark theme is enabled or disabled, depending on your chosen setting. Useful for adapting your macros to the current UI appearance (e.g., changing wallpapers, switching notification styles, etc.).</p> <p>Configuration: - Enable:   Fires when the system switches to dark mode. - Disable:   Fires when the system exits dark mode (i.e., returns to light mode).</p> <p>Example: Trigger a macro that sets a dark wallpaper and lowers brightness when dark theme is enabled.</p>"},{"location":"triggers/data_on_off/","title":"Data Connectivity Change","text":"<p>Description:  This trigger fires when the device\u2019s data connectivity state changes \u2014 that is, when the device becomes connected or disconnected from a network (Wi-Fi or mobile data).  </p> <p>Note</p> <p>A \"connected\" state only means the device is linked to a network; it doesn\u2019t guarantee access to the internet (e.g., local Wi-Fi without internet still counts as connected).</p> <p>Configuration: No additional configuration is required. The trigger simply reacts to connectivity status changes.</p> <p>Example: Trigger a notification saying \u201cConnection lost\u201d when your phone disconnects from both Wi-Fi and mobile data.</p>"},{"location":"triggers/day/","title":"Day of Week/Month","text":"<p>Description: This trigger fires at a specific time on a selected day of the week or day of the month. It\u2019s ideal for scheduling recurring tasks like reminders, backups, or weekly routines.</p> <p>Configuration: - Day of the Week:   Select a day (Monday to Sunday) and the exact time it should fire.  </p> <ul> <li>Day of the Month:   Select a calendar day (1\u201331) and the time.  </li> </ul> <p>Note</p> <p>If a month doesn\u2019t have the selected day (e.g., February 31), the trigger won\u2019t fire.</p> <p>Example: Trigger a macro every Friday at 6:00 PM to turn off Wi-Fi and start a weekend mode.</p>"},{"location":"triggers/day_time/","title":"Day/Time Trigger","text":"<p>Description: This trigger fires at a specific time on one or more selected days of the week. It\u2019s perfect for scheduling routines, reminders, or time-based automations.  </p> <p>Configuration: </p> <ul> <li> <p>Days/Time:   Choose one or more days (Monday to Sunday) and set the exact time to fire the trigger.   Example: Monday to Friday at 08:00.  </p> </li> <li> <p>Use Alarm (Recommended):   Ensures precise triggering by using Android\u2019s alarm mechanism.   </p> </li> </ul> <p>Example: Trigger a \"Good morning\" routine every weekday at 7:30 a.m. \u2014 e.g., turn off DND, read battery status, and show your agenda.  </p>"},{"location":"triggers/daydream/","title":"Daydream On/Off","text":"<p>Description: This trigger fires when Daydream mode (also called screensaver on some devices) is enabled or disabled. Useful for triggering actions while the device is idle and docked or charging.</p> <p>Configuration: - Enable: Fires when Daydream/screensaver mode starts. - Disable: Fires when Daydream/screensaver mode stops.</p> <p>Example: Trigger ambient lighting or a \"do not disturb\" mode when the screensaver turns on.</p>"},{"location":"triggers/device_unlocked/","title":"Device Unlocked","text":"<p>Description: This trigger activates when the device is unlocked by the user \u2014 whether via PIN, pattern, fingerprint, or face unlock.</p> <p>Configuration: No additional configuration needed. The macro will trigger each time the device transitions from a locked to an unlocked state.</p> <p>Example: Trigger a macro to reduce screen brightness and disable airplane mode when the device is unlocked.</p>"},{"location":"triggers/dial_number/","title":"Dial phone number","text":"<p>Description: </p> <p>This trigger fires when you dial the specified number in the standard phone dialer.</p> <p>Configuration: Type of configuration: - <code>Phone number:</code> Specify the phone number to trigger on. - <code>Call action:</code> Choose whether the trigger activates on call start (make call) or call end (stop call).  </p> <p>Example: Trigger a task when dialing <code>+1234567890</code> and stop the call immediately.</p>"},{"location":"triggers/dock/","title":"Device Docked/Undocked","text":"<p>Description: This trigger activates when your device is placed into or removed from a physical dock. Useful for automations like switching to car mode or starting a desk setup routine.</p> <p>Configuration: - Dock Type:   - Any Dock: Fires when the device is docked or undocked from any type of dock.   - Desk Dock`: Fires only when docked/undocked from a desktop-style dock (e.g., charging stand on your desk).   - Car Dock: Fires when placed into or removed from a car-specific dock (typically used for navigation/charging in vehicles).   - Not Docked: Fires when the device is removed from any dock (useful for reversing an automation).</p> <p>Example: Trigger: Device docked into a car dock Action: Launch Google Maps and set brightness to 100%.</p> <p>Simple explanation: Detects when your phone is connected or disconnected from a dock (car or desk), allowing you to automate tasks depending on how you use your device physically.</p>"},{"location":"triggers/drawer_open_close/","title":"MacroDroid Drawer Open/Close","text":"<p>Description: This trigger activates when the MacroDroid drawer is either opened or closed. The drawer is the side panel you can slide out from the edge of the screen, providing quick access to your macros, actions, triggers, and settings.</p> <p>Configuration: - Trigger on Open: Fires when the MacroDroid drawer is opened. - Trigger on Close: Fires when the drawer is closed.</p> <p>Example: Trigger: Drawer opened Action: Show notification <code>\"MacroDroid panel accessed.\"</code></p> <p>Simple explanation: Lets you trigger actions when the MacroDroid sidebar (drawer) is opened or closed \u2014 ideal for tracking usage or creating subtle visual feedback.</p>"},{"location":"triggers/empty/","title":"Empty Trigger","text":"<p>Description: This trigger will never fire on its own. It's used when a macro is meant to be executed only by other macros, not by external events. Typically, it's combined with the <code>Run Macro</code> action.</p> <p>Configuration: - No additional options. It simply acts as a placeholder trigger.</p> <p>Example: You have a macro that performs a cleanup routine. Instead of triggering it with a time or event, you invoke it from another macro using the <code>Run Macro</code> action. This macro would use the Empty Trigger.</p> <p>Simple explanation: It\u2019s a dummy trigger. The macro won't start by itself but can still be run from another macro when needed \u2014 perfect for modular setups.</p>"},{"location":"triggers/external_power/","title":"Power Connected/Disconnected","text":"<p>Description: This trigger fires when the device is connected to or disconnected from an external power source (like a charger or dock).</p> <p>Configuration: - Power Connected: Fires when the device is plugged into power. - Power Disconnected: Fires when the device is unplugged from power.</p> <p>Simple explanation: Detects when you plug or unplug your phone so you can automate actions based on whether it\u2019s <code>charging</code> or not.</p>"},{"location":"triggers/failed_login/","title":"Failed Login Attempt","text":"<p>Description: This trigger fires whenever an incorrect passcode (not fingerprint) is entered on the lock screen. It only activates on valid login attempts\u2014e.g., entering a wrong 4-digit PIN, not invalid shorter codes.  </p> <p>Important</p> <p>To use this trigger, MacroDroid must have device administration permissions enabled.  </p> <p>Warning</p> <p>With device admin enabled, you cannot uninstall MacroDroid the usual way. You must first disable device admin access via your device\u2019s Settings &gt; Security or use the uninstall option inside MacroDroid\u2019s drawer menu.  </p> <p>Configuration: - Num failures: Set the number of failed login attempts to detect (e.g., <code>3</code>). - failures within: Define the time period (e.g., <code>2 minutes</code>) in which the failed attempts must occur.  </p> <p>Example: Trigger a notification if <code>3</code> failed login attempts happen within <code>2 minutes</code>.</p>"},{"location":"triggers/fingerprint_gesture/","title":"Fingerprint Gesture","text":"<p>Description: </p> <p>This trigger fires when a specific gesture is performed on the device\u2019s fingerprint sensor. You can select one of the following gestures to activate the macro: swipe up, swipe down, swipe left, or swipe right.  </p> <p>Note</p> <p>Many devices do not support this trigger because they lack standard Android fingerprint gesture APIs.</p> <p>Configuration: - Gesture selection:   - <code>Swipe Up</code>   - <code>Swipe Down</code>   - <code>Swipe Left</code>   - <code>Swipe Right</code> </p> <p>Example: Trigger a macro when you swipe down on the fingerprint sensor to quickly open notifications.  </p>"},{"location":"triggers/flip_device/","title":"Flip Device","text":"<p>Description: This trigger fires when the device is flipped from face up to face down or vice versa. By default, it only works when the screen is on.</p> <p>Note</p> <p>You can enable this trigger to work when the screen is off via MacroDroid settings, but beware: this may cause significant battery drain.</p> <p>Configuration: - Flip direction:   - <code>Face Down Face Up</code>   - <code>Face Up Face Down</code>   - <code>Any Face Down</code> </p> <p>Example: Trigger a macro to silence notifications when flipping the device face down.</p> <p>Simple explanation: Detect when you flip your phone to trigger actions like muting or waking the screen, with options for direction and screen state.</p>"},{"location":"triggers/floating_button/","title":"Floating Button","text":"<p>Description: This trigger displays a floating button on the screen that can be tapped to activate a macro. The button appears or disappears when the macro is activated or deactivated. Dragging the button over the trash can icon will deactivate the macro by default.  </p> <p>Configuration: - Identifier:   A unique ID used to identify this floating button for configuration within the same or other macros using the action <code>Configure floating button</code>.  </p> <ul> <li> <p>Icon:   Choose from installed app icons, user images, MacroDroid icons, notification icons, material design icons, or text.  </p> </li> <li> <p>Set Background:   Enable a background color behind the icon.  </p> </li> <li> <p>Transparent Background:   Show the floating button without a background color.  </p> </li> <li> <p>Padding:   Adjust the padding around the icon to make it larger or smaller.  </p> </li> <li> <p>Opacity:   Set the transparency level of the floating button.  </p> </li> <li> <p>Size:   Choose between <code>Normal</code> or <code>Small</code> button sizes.  </p> </li> <li> <p>Disable Macro/Trigger on Remove:   Define behavior when dragging the floating button to the recycle bin:  </p> </li> <li>Disable the entire macro (default)  </li> <li> <p>Disable only the trigger  </p> </li> <li> <p>Prevent Removal by Dragging to Bin:   Prevent the floating button from being removed by dragging it to the trash.  </p> </li> <li> <p>Vibrate on Press:   Enable vibration feedback when the button is pressed.  </p> </li> <li> <p>Force Location When Enabled:   Force the floating button to appear at specific screen coordinates every time it is enabled.  </p> </li> <li> <p>Fixed Location:   Prevent the button from being moved manually. Coordinates (X and Y) can be set in pixels or percentage and support Magic Text variables.  </p> </li> </ul> <p>Example: </p> <p>Create a floating button with a custom icon at the bottom-right corner of the screen that activates a macro toggling Wi-Fi when pressed.  </p> <p>Simple explanation: </p> <p>Shows a customizable floating button anywhere on your screen that you tap to run macros. You can control its icon, size, position, and behavior when removed.  </p>"},{"location":"triggers/fold_angle/","title":"Fold angle","text":"<p>Description: This trigger can be configured to fire based on the angle of the opening on a foldable phone.  </p> <p>Configuration: Type of configuration: - <code>Angle:</code> The specific fold angle or range of angles at which the trigger should fire.  </p> <p>Requires: A foldable phone.  </p> <p>Example: Trigger an action when the fold angle is greater than 90 degrees.  </p> <p>Note</p> <p>If this information is not correct or you have additional details about fold angle behavior, please open an issue to improve accuracy, as this description is based on limited device availability.</p>"},{"location":"triggers/geofence/","title":"Geofence (location)","text":"<p>Description: </p> <p>Geofence triggers automatically start your macros when your device enters or exits a defined geographical area. They provide battery-efficient location detection using Google Play Services.</p> <p>Configuration: Activation Type: - <code>Entry:</code> Triggers when device enters the geofenced area - <code>Exit:</code> Triggers when device leaves the geofenced area  </p> <p>Trigger if previous location unknown: - When enabled, the trigger will activate even if the device's previous location wasn't known. Useful for: Ensuring triggers fire after device reboot or when location services were temporarily disabled.</p> <p>Update Frequency Settings: - High frequency update rates may cause additional battery drain.</p> <p>Requires: - An existing geofence created via the Geofences tile - Location services enabled on device - Google Play Services  </p> <p>Magic Text: Magic Text: Geofence Constraint Magic Text: Magic Text </p>"},{"location":"triggers/google_assistant/","title":"Google Assistant","text":"<p>Description: This trigger activates when a macro is invoked via Google Assistant using \"Ok Google\" commands. It can be used in macros with multiple triggers to identify if Google Assistant initiated the execution.  </p> <p>Note</p> <p>Gemini is distinct from Google Assistant and is not compatible with this trigger.  </p> <p>Requires: - Google Assistant enabled and set as default assistant - MacroDroid accessibility service enabled  </p>"},{"location":"triggers/google_assistant/#google-assistant-via-home-routines","title":"Google Assistant via Home Routines","text":"<p>Description: Alternative method to trigger macros via Google Assistant using Google Home routines and notification-based activation, bypassing the need for \"run ... in MacroDroid\" phrasing. MacroDroid and Google Home / Assistant (Forum) </p> <p>Note</p> <p>Gemini is distinct from Google Assistant and is not compatible with this trigger.  </p> <p>Configuration: Google Home Setup: - <code>Activation phrase:</code> Custom phrase triggering the routine - <code>Body text:</code> Notification content matching MacroDroid's trigger - <code>Email address:</code> Google account email linked to Google Home  </p> <p>MacroDroid Setup: - <code>Notification trigger:</code> Configured to detect notifications containing the specified body text from Google Home  </p> <p>Requires: - Google Home app installed and configured - Language compatibility verified (check here) - Google account signed in on all devices  </p> <p>Example: </p> <ol> <li>Google Home Configuration: </li> <li>Access https://home.google.com/ \u2192 \"Add Routine\"  </li> <li>Replace demo code with: <pre><code>metadata:\n  name: MacroDroid Automation\n  description: MacroDroid - Google Home\n\nautomations:\n  starters:\n    type: assistant.event.OkGoogle\n    eventData: \n      query: \"Lights On\"\n  actions:\n    type: home.command.Notification\n    title: \"Google Home MacroDroid\"\n    body: \"Living Room Lights\"\n    members: your_email@gmail.com\n</code></pre></li> <li> <p>Modify:  </p> <ul> <li><code>query: \"Lights On\"</code> \u2192 Your activation phrase  </li> <li><code>body: \"Living Room Lights\"</code> \u2192 Unique macro identifier  </li> <li><code>members: your_email@gmail.com</code> \u2192 Your account email  </li> </ul> </li> <li> <p>MacroDroid Configuration: </p> </li> <li>Trigger: Notification Received <ul> <li>Application: <code>Google Home</code> </li> <li>Text Contains: <code>Living Room Lights</code> </li> </ul> </li> </ol> <p>Advanced: To create multiple routines within the same automation script, add additional starter-action blocks:  </p> <pre><code>metadata:\n  name: MacroDroid Automation\n  description: MacroDroid - Google Home\n\nautomations:\n  - starters:\n      - type: assistant.event.OkGoogle\n        eventData: \n          query: \"Morning Routine\"\n    actions:\n      - type: home.command.Notification\n        title: \"Google Home MacroDroid\"\n        body: \"Start Morning\"\n        members: your_email@gmail.com\n\n  - starters:\n      - type: assistant.event.OkGoogle\n        eventData: \n          query: \"Night Mode\"\n    actions:\n      - type: home.command.Notification\n        title: \"Google Home MacroDroid\"\n        body: \"Activate Night\"\n        members: your_email@gmail.com\n</code></pre>"},{"location":"triggers/gps_enabled/","title":"Gps Enabled/Disabled","text":"<p>Description: </p> <p>This trigger will fire when GPS is turned on or off.</p> <p>Configuration: Type of configuration: - <code>State:</code> Select whether to trigger when GPS is <code>enabled</code> or <code>disabled</code>.</p>"},{"location":"triggers/list/","title":"List of triggers","text":""},{"location":"triggers/list/#activity-recognition","title":"Activity Recognition","text":""},{"location":"triggers/list/#airplane-mode-changed","title":"Airplane Mode Changed","text":""},{"location":"triggers/list/#android-wear","title":"Android Wear","text":""},{"location":"triggers/list/#app-installremoveupdate","title":"App Install/Remove/Update","text":""},{"location":"triggers/list/#application-launchedclosed","title":"Application Launched/Closed","text":""},{"location":"triggers/list/#auto-rotate-changed","title":"Auto Rotate Changed","text":""},{"location":"triggers/list/#autosync-changed","title":"Autosync Changed","text":""},{"location":"triggers/list/#battery-level","title":"Battery Level","text":""},{"location":"triggers/list/#battery-temperature","title":"Battery Temperature","text":""},{"location":"triggers/list/#battery-saver-state","title":"Battery Saver State","text":""},{"location":"triggers/list/#bluetooth-event","title":"Bluetooth Event","text":""},{"location":"triggers/list/#bluetooth-beacon","title":"Bluetooth Beacon","text":""},{"location":"triggers/list/#device-boot","title":"Device Boot","text":""},{"location":"triggers/list/#calendar-event","title":"Calendar Event","text":""},{"location":"triggers/list/#call-ended","title":"Call Ended","text":""},{"location":"triggers/list/#call-active","title":"Call Active","text":""},{"location":"triggers/list/#call-missed","title":"Call Missed","text":""},{"location":"triggers/list/#call-outgoing","title":"Call outgoing","text":""},{"location":"triggers/list/#cell-tower-change","title":"Cell Tower Change","text":""},{"location":"triggers/list/#clipboard-change","title":"Clipboard Change","text":""},{"location":"triggers/list/#dark-theme-change","title":"Dark Theme Change","text":""},{"location":"triggers/list/#data-connectivity-change","title":"Data Connectivity Change","text":""},{"location":"triggers/list/#day-of-weekmonth","title":"Day of Week/Month","text":""},{"location":"triggers/list/#daydream-onoff","title":"Daydream On/Off","text":""},{"location":"triggers/list/#device-unlocked","title":"Device Unlocked","text":""},{"location":"triggers/list/#dial-phone-number","title":"Dial Phone Number","text":""},{"location":"triggers/list/#device-dockedundocked","title":"Device Docked/Undocked","text":""},{"location":"triggers/list/#macrodroid-drawer-openclose","title":"MacroDroid Drawer Open/Close","text":""},{"location":"triggers/list/#empty-trigger","title":"Empty Trigger","text":""},{"location":"triggers/list/#ip-address-change","title":"IP Address Change","text":""},{"location":"triggers/list/#power-connecteddisconnected","title":"Power Connected/Disconnected","text":""},{"location":"triggers/list/#failed-login-attempt","title":"Failed Login Attempt","text":""},{"location":"triggers/list/#fingerprint-gesture","title":"Fingerprint Gesture","text":""},{"location":"triggers/list/#flip-device","title":"Flip Device","text":""},{"location":"triggers/list/#floating-button","title":"Floating Button","text":""},{"location":"triggers/list/#google-assistant","title":"Google Assistant","text":""},{"location":"triggers/list/#gps-enableddisabled","title":"GPS Enabled/Disabled","text":""},{"location":"triggers/list/#headphones-insertremove","title":"Headphones Insert/Remove","text":""},{"location":"triggers/list/#home-button-long-press","title":"Home Button Long Press","text":""},{"location":"triggers/list/#hotspot","title":"Hotspot","text":""},{"location":"triggers/list/#incoming-call","title":"Incoming Call","text":""},{"location":"triggers/list/#sms-received","title":"SMS Received","text":""},{"location":"triggers/list/#intent-received","title":"Intent Received","text":""},{"location":"triggers/list/#taskerlocale-plugin","title":"Tasker/Locale Plugin","text":""},{"location":"triggers/list/#logcat-message","title":"Logcat Message","text":""},{"location":"triggers/list/#light-sensor","title":"Light Sensor","text":""},{"location":"triggers/list/#geofence-trigger","title":"Geofence Trigger","text":""},{"location":"triggers/list/#location-trigger","title":"Location Trigger","text":""},{"location":"triggers/list/#macro-enabled","title":"Macro Enabled","text":""},{"location":"triggers/list/#macrodroid-initialised","title":"MacroDroid Initialised","text":""},{"location":"triggers/list/#media-button-pressed","title":"Media Button Pressed","text":""},{"location":"triggers/list/#media-button-v2","title":"Media Button V2","text":""},{"location":"triggers/list/#macrodroid-mode-change","title":"MacroDroid Mode Change","text":""},{"location":"triggers/list/#musicsound-playing","title":"Music/Sound Playing","text":""},{"location":"triggers/list/#roaming-startedstopped","title":"Roaming Started/Stopped","text":""},{"location":"triggers/list/#nfc-tag","title":"NFC Tag","text":""},{"location":"triggers/list/#notification-bar-button","title":"Notification Bar Button","text":""},{"location":"triggers/list/#notification","title":"Notification","text":""},{"location":"triggers/list/#screen-orientation","title":"Screen Orientation","text":""},{"location":"triggers/list/#call-outgoing_1","title":"Call Outgoing","text":""},{"location":"triggers/list/#pebble-watch","title":"Pebble Watch","text":""},{"location":"triggers/list/#power-button-toggle","title":"Power Button Toggle","text":""},{"location":"triggers/list/#priority-modedo-not-disturb","title":"Priority Mode/Do Not Disturb","text":""},{"location":"triggers/list/#proximity-sensor","title":"Proximity Sensor","text":""},{"location":"triggers/list/#quick-settings-tile","title":"Quick Settings Tile","text":""},{"location":"triggers/list/#recent-apps-opened","title":"Recent Apps Opened","text":""},{"location":"triggers/list/#regular-interval","title":"Regular Interval","text":""},{"location":"triggers/list/#screen-onoff","title":"Screen On/Off","text":""},{"location":"triggers/list/#shake-device","title":"Shake Device","text":""},{"location":"triggers/list/#shortcut-launched","title":"Shortcut Launched","text":""},{"location":"triggers/list/#mobile-service-status","title":"Mobile Service Status","text":""},{"location":"triggers/list/#sim-card-change","title":"SIM Card Change","text":""},{"location":"triggers/list/#silent-mode-enableddisabled","title":"Silent Mode Enabled/Disabled","text":""},{"location":"triggers/list/#sleep","title":"Sleep","text":""},{"location":"triggers/list/#sms-sent","title":"SMS Sent","text":""},{"location":"triggers/list/#spotify","title":"Spotify","text":""},{"location":"triggers/list/#sunsetsunrise","title":"Sunset/Sunrise","text":""},{"location":"triggers/list/#swipe-screen","title":"Swipe Screen","text":""},{"location":"triggers/list/#system-log-entry","title":"System Log Entry","text":""},{"location":"triggers/list/#system-setting-change","title":"System Setting Change","text":""},{"location":"triggers/list/#daytime-trigger","title":"Day/Time Trigger","text":""},{"location":"triggers/list/#usb-device-connectdisconnect","title":"USB Device Connect/Disconnect","text":""},{"location":"triggers/list/#screen-content","title":"Screen Content","text":""},{"location":"triggers/list/#macrodroid-variable-change","title":"MacroDroid Variable Change","text":""},{"location":"triggers/list/#volume-button-long-press","title":"Volume Button Long Press","text":""},{"location":"triggers/list/#volume-button-pressed","title":"Volume Button Pressed","text":""},{"location":"triggers/list/#vpn-state-change","title":"VPN State Change","text":""},{"location":"triggers/list/#weather","title":"Weather","text":""},{"location":"triggers/list/#webhook-url","title":"Webhook (Url)","text":""},{"location":"triggers/list/#widget-button","title":"Widget Button","text":""},{"location":"triggers/list/#wifi-state-change","title":"Wifi State Change","text":""},{"location":"triggers/list/#wifi-ssid-transition","title":"Wifi SSID Transition","text":""},{"location":"triggers/list/#macro-finished","title":"Macro Finished","text":""},{"location":"triggers/list/#power-button-long-press","title":"Power Button Long Press","text":""},{"location":"triggers/list/#fold-state","title":"Fold State","text":""},{"location":"triggers/list/#ui-click","title":"UI Click","text":""},{"location":"triggers/list/#photo-taken","title":"Photo Taken","text":""},{"location":"triggers/list/#accessibility-service-state","title":"Accessibility Service State","text":""},{"location":"triggers/list/#popup-message","title":"PopUp Message","text":""},{"location":"triggers/list/#nfc-enabled-state","title":"NFC Enabled State","text":""},{"location":"triggers/list/#media-track-changed","title":"Media Track Changed","text":""},{"location":"triggers/list/#wear-os-complication-click","title":"Wear OS Complication Click","text":""},{"location":"triggers/list/#app-activity-launchedclosed","title":"App Activity Launched/Closed","text":""},{"location":"triggers/wifi_SSID/","title":"Wifi SSID Transition","text":"<p>Description: </p> <p>This trigger will fire when a particular wifi network goes in or out of range.</p> <p>Configuration: </p> <ul> <li><code>SSID in range:</code> The WiFi network (SSID) is in range.  </li> <li><code>SSID out range:</code> The WiFi network (SSID) is out of range.</li> <li><code>Add SSID:</code> Manually define the network name (SSID).</li> </ul> <p>Important</p> <p>The device must have WiFi enabled and location permission (GPS) to scan nearby networks.</p> <p>Example: </p> <p>Trigger when the WiFi network <code>HomeNetwork</code> goes out of range (disconnects). Trigger when entering the range of the WiFi network <code>OfficeWiFi</code>.</p>"},{"location":"triggers/wifi_connection/","title":"WiFi State Change","text":"<p>Description: </p> <p>This trigger activates when the WiFi state of the device changes, such as connecting to or disconnecting from a WiFi network.</p> <p>Configuration: </p> <ul> <li> <p><code>State:</code> Specify the WiFi state to trigger on (e.g., <code>connected</code>, <code>disconnected</code>).  </p> </li> <li> <p><code>State:</code> </p> </li> </ul> <p>!!! note </p> <ul> <li>Settins title:   Description   ``</li> </ul> <p>Magic Text: ****</p> <p>*Example:</p>"},{"location":"variables/","title":"Variables in MacroDroid","text":"<p>Variables store and manipulate data in your macros \u2014 they are containers holding values your macros use and change during execution.</p> <ul> <li>Global Variables </li> <li>Syntax: <code>{v=varName}</code> or <code>[v=varName]</code> </li> <li>Available in all macros, including Action Blocks  </li> <li> <p>Ideal for sharing data between macros or across multiple triggers  </p> </li> <li> <p>Local Variables </p> </li> <li>Syntax: <code>{lv=varName}</code> or <code>[lv=varName]</code> </li> <li>Only available within the macro where created (including Action Blocks called by that macro)  </li> <li>Best for temporary or macro-specific values  </li> </ul> <p>Use Global Variables for persistent or shared data. Use Local Variables for isolated, one-time-use values.</p>"},{"location":"variables/#supported-variable-types","title":"Supported Variable Types","text":"<ul> <li><code>String</code> \u2014 text values (e.g., \"Hello world\")  </li> <li><code>Integer</code> \u2014 whole numbers (e.g., 5, -12)  </li> <li><code>Decimal</code> \u2014 decimal numbers (e.g., 3.14, -0.01)  </li> <li><code>Boolean</code> \u2014 true/false  </li> <li><code>Array</code> \u2014 lists of values (e.g., [1, 2, 3], [\"A\", \"B\", \"C\"])  </li> <li><code>Dictionary</code> \u2014 key-value pairs (e.g., {\"name\": \"Alex\", \"age\": 30})</li> </ul>"},{"location":"variables/#secure-variables","title":"Secure Variables","text":"<p>Mark variables as Secure to clear their contents when macros are shared, exported, or uploaded to the template store.</p> <p>Use Secure variables to protect sensitive data like passwords or tokens.</p>"},{"location":"variables/#using-variables-in-conditions-constraints-and-text-fields","title":"Using Variables in Conditions, Constraints, and Text Fields","text":"<p>Variables can be used in:</p> <ul> <li>Conditions (e.g., \"if <code>isLoggedIn</code> is true\")  </li> <li>Constraints (e.g., \"run only if <code>batteryLevel</code> &gt; 50\")  </li> <li>Text fields by referencing <code>{v=yourVar}</code> or <code>{lv=yourVar}</code> </li> <li>Magic Text inputs throughout actions  </li> </ul> <p>They allow your macros to adapt dynamically based on real-time data.</p>"},{"location":"variables/#quick-summary","title":"Quick Summary","text":"<ul> <li>Global: <code>{v=varName}</code> \u2014 shared and persistent data  </li> <li>Local: <code>{lv=varName}</code> \u2014 temporary data inside a single macro  </li> <li>Secure: any variable marked to hide sensitive info in exports</li> </ul> <p>Variables are the brain behind your macros. Master them to unlock MacroDroid\u2019s full potential.</p>"},{"location":"variables/#recommended-video-guides","title":"Recommended Video Guides","text":""},{"location":"es/helper/connectivity/","title":"Connectivity","text":"<p>The Connectivity Helper is a companion app for MacroDroid that works around Android 14+ restrictions, enabling these advanced features: - Enable/Disable WiFi and connect to specific networks - Enable/Disable Bluetooth - Enable/Disable HotSpot  </p> <p>Compatibility: Requires MacroDroid v5.47.8 or higher  </p>"},{"location":"es/macrodroid_log/system_log/","title":"System log","text":""},{"location":"es/macrodroid_log/user_log/","title":"User log","text":""}]}